{"cells":[{"cell_type":"markdown","metadata":{"id":"3M4kWSUZkHmG"},"source":["# Imports and Constants"]},{"cell_type":"code","execution_count":13,"metadata":{"id":"vNYAmL6IkS3x","executionInfo":{"status":"ok","timestamp":1737306391821,"user_tz":360,"elapsed":150,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"outputs":[],"source":["# Import necessary libraries\n","import os\n","import re\n","import numpy as np\n","import pandas as pd\n","from collections import defaultdict\n","from PIL import Image\n","import matplotlib.pyplot as plt\n","from sklearn.model_selection import StratifiedKFold\n","import tensorflow as tf\n","from tensorflow.keras.models import Model\n","from tensorflow.keras.layers import (Dense, GlobalAveragePooling2D, Input, Concatenate)\n","#from tensorflow.keras.applications.mobilenet import MobileNet, preprocess_input\n","from tensorflow.keras.applications.densenet import DenseNet169, preprocess_input #Dense\n","from tensorflow.keras.preprocessing import image as keras_image\n","from tensorflow.keras.callbacks import ReduceLROnPlateau, EarlyStopping\n","from tensorflow.keras.utils import to_categorical, Sequence\n","from tensorflow.keras.metrics import (Precision, Recall, AUC, SensitivityAtSpecificity, SpecificityAtSensitivity)\n","\n","# Constants\n","num_folds = 5\n","num_classes = 1  # Binary classification\n","image_height = 224\n","image_width = 224\n","patients_per_batch = 9  # Number of patients per batch\n","num_top_layers_to_train = 3  # Number of top layers to train\n","input_shape = (224, 224, 3)  # Input shape for individual images\n"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XGfUeiPMb6Mk","executionInfo":{"status":"ok","timestamp":1737304861125,"user_tz":360,"elapsed":14646,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}},"outputId":"f9145dbd-d337-47f2-e9bd-021c807b1d44"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n","Current Working Directory: /content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF\n"]}],"source":["### FOR JACOB\n","from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)\n","\n","# Path to your folder in Google Drive\n","folder_path = '/content/drive/My Drive/BCM/AI-DRF'\n","\n","# Change the current working directory\n","os.chdir(folder_path)\n","\n","# Verify the change\n","print(\"Current Working Directory:\", os.getcwd())"]},{"cell_type":"markdown","metadata":{"id":"hPwasGLG1_1-"},"source":["## Debug"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":135,"status":"ok","timestamp":1727144761301,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"},"user_tz":300},"id":"OMtI8XnK2Bn9","outputId":"ba980c6f-9932-4b0b-baca-bbcd89f16280"},"outputs":[{"name":"stdout","output_type":"stream","text":["Checking base_dir_path: /content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images\n","Contents of /content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images: ['BT000153389', 'BT003523021', 'BT004339274', 'BT005325471', 'BT040582096', 'BT081447632', 'BT080781351', 'BT081254460', 'BT044564611', 'BT081693293', 'BT081897395', 'BT050205274', 'BT079831280', 'BT080482248', 'BT006298818', 'BT006590918', 'BT076126615', 'BT052465443', 'BT071826147', 'BT015238607', 'BT081441286', 'BT080099231', 'BT035317309', 'BT037253481', 'BT032612300', 'BT080429011', 'BT046175883', 'BT081220395', 'BT050815145', 'BT076000034', 'BT073600031', 'BT078289864', 'BT070493136', 'BT080269340', 'BT079917532', 'BT080046057', 'BT031715253', 'BT081929343', 'BT017930401', 'BT041172690', 'BT039394294', 'BT073046726', 'BT007183895', 'BT014022368', 'BT082030298', 'BT081720916', 'BT081308578', 'BT079899208', 'BT070185750', 'BT080673051', 'BT081870454', 'BT080489421', 'BT080784813', 'BT081647241', 'BT081914281', 'BT074052622', 'BT079220710', 'BT082014322', 'BT015193794', 'BT080527764', 'BT010712785', 'BT079801046', 'BT077980512', 'BT052600715', 'BT010841844', 'BT093034821', 'BT081418632', 'BT079046108', 'BT072940555', 'BT078977914', 'BT081912122', 'BT081960941', 'BT079156361', 'BT080437781', 'BT043502000', 'BT044735709', 'BT042806692', 'BT081635943', 'BT081974195', 'BT081708681', 'BT049571721', 'BT033676433', 'BT081812322', 'BT030404467', 'BT074030122', 'BT077398104', 'BT050700224', 'BT041506466', 'BT077042997', 'BT047703191', 'BT042046817', 'BT081132577', 'BT081543151', 'BT051126505', 'BT081298319', 'BT039012383', 'BT081697884', 'BT081782300', 'BT080138253', 'BT080598491', 'BT050569942', 'BT040920391', 'BT076288755', 'BT080164505', 'BT070805782', 'BT080043767', 'BT052390290', 'BT036606380', 'BT012357354', 'BT035944567', 'BT011893040', 'BT72022807', 'BT80645082', 'BT081337241', 'BT079928224', 'BT071770559', 'BT051756827', 'BT080500874', 'BT080102038', 'BT014139397', 'BT076678812', 'BT081268428', 'BT047540861', 'BT044123801', 'BT034648247', 'BT015649402', 'BT081017026', 'BT081596794', 'BT075433786', 'BT038151258', 'BT081793328', 'BT081914923', 'BT081343748', 'BT046760727', 'BT080305478', 'BT070935589', 'BT030770421', 'BT080146671', 'BT079978582', 'BT038313231', 'BT079983152', 'BT081901937', 'BT081466751', 'BT045651932', 'BT082112324', 'BT080842091', 'BT081337535', 'BT010742510', 'BT080314299', 'BT010402115', 'BT041965312', 'BT081765944', 'BT075250355', 'BT072268369', 'BT073956293', 'BT074277900', 'BT081682429', 'BT080241615', 'BT080392567', 'BT081540721', 'BT080504322', 'BT037355208', 'BT016149021', 'BT042787787', 'BT079726583', 'BT035841288', 'BT081287066', 'BT042035114', 'BT036135158', 'BT080509308', 'BT036022833', 'BT081583749', 'BT052155452', 'BT034704899', 'BT051086678', 'BT080447965', 'BT045473384', 'BT082109366', 'BT039899001', 'BT082260986', 'BT018094975', 'BT012020511', 'BT010476585', 'BT072167643', 'BT082247165', 'BT074305245', 'BT039990725', 'BT080972199', 'BT082067892', 'BT081450854', 'BT082174265', 'BT081078955', 'BT014028714', 'BT051792661', 'BT074204724', 'BT080548192', 'BT050767345', 'BT080552335', 'BT081304289', 'BT082060383', 'BT017444751', 'BT015383119', 'BT071080072', 'BT078229969', 'BT075692188', 'BT081642664', 'BT080508620', 'BT080166346', 'BT006910629', 'BT015933780', 'BT080622066', 'BT079756504', 'BT080872861', 'BT037577227', 'BT080534582', 'BT080471998', 'BT048574076', 'BT044772892', 'BT048122493', 'BT080648839', 'BT037980625', 'BT080256973', 'BT073661056', 'BT078959291', 'BT042467723', 'BT042338567', 'BT081615501', 'BT080413700', 'BT082110712', 'BT031000572', 'BT080020350', 'BT082109331', 'BT080270747', 'BT034167796', 'BT081751455', 'BT080338147', 'BT037913553', 'BT014097961', 'BT080676531', 'BT050260011', 'BT076480168', 'BT081057141', 'BT081556393', 'BT081555192', 'BT082058958', 'BT016667749', 'BT080644361', 'BT081485275', 'BT047972965', 'BT081814724', 'BT082090142', 'BT073919762', 'BT043301802', 'BT079154512', 'BT071114856', 'BT041422467', 'BT017018370', 'BT033493819', 'BT031411696', 'BT078513357', 'BT050423298', 'BT081511438', 'BT039633281', 'BT081195919', 'BT014808809', 'BT081162093', 'BT082080856', 'BT045586359', 'BT078634511', 'BT038763253', 'BT082158707', 'BT043214314', 'BT081599386', 'BT080058217', 'BT079544761', 'BT038461095', 'BT030256522', 'BT081134898', 'BT041714891', 'BT045467457', 'BT075574622', 'BT016985945', 'BT031822912', 'BT045104915', 'BT011496491', 'BT040056491', 'BT034058041', 'BT070110440', 'BT080058446', 'BT080287330', 'BT081654646', 'BT081194441', 'BT045635619', 'BT080485484', 'BT080234228', 'BT031528551', 'BT080430671', 'BT081820201', 'BT073473179', 'BT036774657', 'BT030658086', 'BT081614202', 'BT080601280', 'BT081784132', 'BT075788126', 'BT017937081', 'BT034437394', 'BT079953318', 'BT044566869', 'BT015163941', 'BT080770740', 'BT073245303', 'BT076310700', 'BT076456585', 'BT070441691', 'BT080124562', 'BT081399751', 'BT047750679', 'BT043582399', 'BT036278145', 'BT009154914', 'BT031979625', 'BT080797346', 'BT082730346', 'BT082745785', 'BT016345466', 'BT082756388', 'BT082591966', 'BT078945699', 'BT042634549', 'BT082615539', 'BT046105338', 'BT013594406', 'BT050081877', 'BT074546820', 'BT082580620', 'BT081946418', 'BT082470310', 'BT081225257', 'BT082525483', 'BT082529543', 'BT008970912', 'BT082440534', 'BT032842976', 'BT041214058', 'BT077113169', 'BT081295620', 'BT081475369', 'BT034351236', 'BT082314334', 'BT082318321', 'BT039571170', 'BT038082001', 'BT045545423', 'BT082284176', 'BT017472879', 'BT031452791', 'BT037167088', 'BT079894915', 'BT082178198', 'BT074265031', 'BT082211578', 'BT082109412', 'BT082110801', 'BT047603773', 'BT080957157', 'BT018068575', 'BT082052593', 'BT031922666', 'BT003581331', 'BT016040428', 'BT045992730', 'BT038299174', 'BT082003703', 'BT070655781', 'BT079607606', 'BT048972292', 'BT081288216', 'BT081275157', 'BT081293538', 'BT081303339', 'BT050844021', 'BT081334889', 'BT039462711', 'BT070368978', 'BT013053928', 'BT081412006', 'BT043299972', 'BT081419906', 'BT080288409', 'BT081430489', 'BT046629931', 'BT031029511', 'BT033517467', 'BT079975826', 'BT081479691', 'BT081485836', 'BT081492042', 'BT077299777', 'BT031277116', 'BT017768786', 'BT081516456', 'BT012492596', 'BT031114551', 'BT081528951', 'BT081529931', 'BT076922721', 'BT041742241', 'BT081541264', 'BT081544841', 'BT074152261', 'BT013115087', 'BT081565317', 'BT014534334', 'BT007723822', 'BT049338287', 'BT081635021', 'BT039296403', 'BT048825681', 'BT081654310', 'BT049065302', 'BT079316334', 'BT071030199', 'BT081716978', 'BT081732264', 'BT081743070', 'BT048254187', 'BT081781931', 'BT081785139', 'BT045681092', 'BT081792364', 'BT079159077', 'BT075103123', 'BT081808422', 'BT081814317', 'BT008295476', 'BT012981775', 'BT073395453', 'BT037878472', 'BT017209426', 'BT071521427', 'BT046668901', 'BT013447420', 'BT015964685', 'BT006363130', 'BT080634714', 'BT075479425', 'BT079918636', 'BT080645457', 'BT050410412', 'BT015221615', 'BT080664699', 'BT076297207', 'BT080677758', 'BT080678754', 'BT080681119', 'BT015628383', 'BT077852280', 'BT080705476', 'BT041891572', 'BT074514774', 'BT079855162', 'BT010498236', 'BT042981052', 'BT080760353', 'BT072584571', 'BT050800075', 'BT080784881', 'BT016042889', 'BT040064397', 'BT078394811', 'BT048843182', 'BT012479719', 'BT080853581', 'BT078554541', 'BT043383264', 'BT009046127', 'BT041898518', 'BT074080979', 'BT080891881', 'BT080909683', 'BT079763136', 'BT012453698', 'BT080926464', 'BT080938951', 'BT078760231', 'BT015123036', 'BT080971184', 'BT079191434', 'BT080984812', 'BT044593556', 'BT039745372', 'BT079249360', 'BT081026289', 'BT016128562', 'BT039638941', 'BT048618065', 'BT032139264', 'BT077592750', 'BT039077761', 'BT081159947', 'BT081173192', 'BT047249228', 'BT081218439', 'BT043342801', 'BT079214159', 'BT081960071', 'BT014405739', 'BT003133794', 'BT082049690', 'BT070206897', 'BT070926695', 'BT074569218', 'BT076333301', 'BT071898202', 'BT082315217', 'BT039600897', 'BT007656335', 'BT082332286', 'BT045744809', 'BT082362886', 'BT013034681', 'BT075442254', 'BT082384715', 'BT046083750', 'BT082408860', 'BT081465312', 'BT047406986', 'BT002236209', 'BT003060739', 'BT004410297', 'BT082650881', 'BT082690531', 'BT015421681', 'BT035179143']\n","\n","Checking comb_dir: /content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images\n","Contents of /content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images: ['BT000153389', 'BT003523021', 'BT004339274', 'BT005325471', 'BT040582096', 'BT081447632', 'BT080781351', 'BT081254460', 'BT044564611', 'BT081693293', 'BT081897395', 'BT050205274', 'BT079831280', 'BT080482248', 'BT006298818', 'BT006590918', 'BT076126615', 'BT052465443', 'BT071826147', 'BT015238607', 'BT081441286', 'BT080099231', 'BT035317309', 'BT037253481', 'BT032612300', 'BT080429011', 'BT046175883', 'BT081220395', 'BT050815145', 'BT076000034', 'BT073600031', 'BT078289864', 'BT070493136', 'BT080269340', 'BT079917532', 'BT080046057', 'BT031715253', 'BT081929343', 'BT017930401', 'BT041172690', 'BT039394294', 'BT073046726', 'BT007183895', 'BT014022368', 'BT082030298', 'BT081720916', 'BT081308578', 'BT079899208', 'BT070185750', 'BT080673051', 'BT081870454', 'BT080489421', 'BT080784813', 'BT081647241', 'BT081914281', 'BT074052622', 'BT079220710', 'BT082014322', 'BT015193794', 'BT080527764', 'BT010712785', 'BT079801046', 'BT077980512', 'BT052600715', 'BT010841844', 'BT093034821', 'BT081418632', 'BT079046108', 'BT072940555', 'BT078977914', 'BT081912122', 'BT081960941', 'BT079156361', 'BT080437781', 'BT043502000', 'BT044735709', 'BT042806692', 'BT081635943', 'BT081974195', 'BT081708681', 'BT049571721', 'BT033676433', 'BT081812322', 'BT030404467', 'BT074030122', 'BT077398104', 'BT050700224', 'BT041506466', 'BT077042997', 'BT047703191', 'BT042046817', 'BT081132577', 'BT081543151', 'BT051126505', 'BT081298319', 'BT039012383', 'BT081697884', 'BT081782300', 'BT080138253', 'BT080598491', 'BT050569942', 'BT040920391', 'BT076288755', 'BT080164505', 'BT070805782', 'BT080043767', 'BT052390290', 'BT036606380', 'BT012357354', 'BT035944567', 'BT011893040', 'BT72022807', 'BT80645082', 'BT081337241', 'BT079928224', 'BT071770559', 'BT051756827', 'BT080500874', 'BT080102038', 'BT014139397', 'BT076678812', 'BT081268428', 'BT047540861', 'BT044123801', 'BT034648247', 'BT015649402', 'BT081017026', 'BT081596794', 'BT075433786', 'BT038151258', 'BT081793328', 'BT081914923', 'BT081343748', 'BT046760727', 'BT080305478', 'BT070935589', 'BT030770421', 'BT080146671', 'BT079978582', 'BT038313231', 'BT079983152', 'BT081901937', 'BT081466751', 'BT045651932', 'BT082112324', 'BT080842091', 'BT081337535', 'BT010742510', 'BT080314299', 'BT010402115', 'BT041965312', 'BT081765944', 'BT075250355', 'BT072268369', 'BT073956293', 'BT074277900', 'BT081682429', 'BT080241615', 'BT080392567', 'BT081540721', 'BT080504322', 'BT037355208', 'BT016149021', 'BT042787787', 'BT079726583', 'BT035841288', 'BT081287066', 'BT042035114', 'BT036135158', 'BT080509308', 'BT036022833', 'BT081583749', 'BT052155452', 'BT034704899', 'BT051086678', 'BT080447965', 'BT045473384', 'BT082109366', 'BT039899001', 'BT082260986', 'BT018094975', 'BT012020511', 'BT010476585', 'BT072167643', 'BT082247165', 'BT074305245', 'BT039990725', 'BT080972199', 'BT082067892', 'BT081450854', 'BT082174265', 'BT081078955', 'BT014028714', 'BT051792661', 'BT074204724', 'BT080548192', 'BT050767345', 'BT080552335', 'BT081304289', 'BT082060383', 'BT017444751', 'BT015383119', 'BT071080072', 'BT078229969', 'BT075692188', 'BT081642664', 'BT080508620', 'BT080166346', 'BT006910629', 'BT015933780', 'BT080622066', 'BT079756504', 'BT080872861', 'BT037577227', 'BT080534582', 'BT080471998', 'BT048574076', 'BT044772892', 'BT048122493', 'BT080648839', 'BT037980625', 'BT080256973', 'BT073661056', 'BT078959291', 'BT042467723', 'BT042338567', 'BT081615501', 'BT080413700', 'BT082110712', 'BT031000572', 'BT080020350', 'BT082109331', 'BT080270747', 'BT034167796', 'BT081751455', 'BT080338147', 'BT037913553', 'BT014097961', 'BT080676531', 'BT050260011', 'BT076480168', 'BT081057141', 'BT081556393', 'BT081555192', 'BT082058958', 'BT016667749', 'BT080644361', 'BT081485275', 'BT047972965', 'BT081814724', 'BT082090142', 'BT073919762', 'BT043301802', 'BT079154512', 'BT071114856', 'BT041422467', 'BT017018370', 'BT033493819', 'BT031411696', 'BT078513357', 'BT050423298', 'BT081511438', 'BT039633281', 'BT081195919', 'BT014808809', 'BT081162093', 'BT082080856', 'BT045586359', 'BT078634511', 'BT038763253', 'BT082158707', 'BT043214314', 'BT081599386', 'BT080058217', 'BT079544761', 'BT038461095', 'BT030256522', 'BT081134898', 'BT041714891', 'BT045467457', 'BT075574622', 'BT016985945', 'BT031822912', 'BT045104915', 'BT011496491', 'BT040056491', 'BT034058041', 'BT070110440', 'BT080058446', 'BT080287330', 'BT081654646', 'BT081194441', 'BT045635619', 'BT080485484', 'BT080234228', 'BT031528551', 'BT080430671', 'BT081820201', 'BT073473179', 'BT036774657', 'BT030658086', 'BT081614202', 'BT080601280', 'BT081784132', 'BT075788126', 'BT017937081', 'BT034437394', 'BT079953318', 'BT044566869', 'BT015163941', 'BT080770740', 'BT073245303', 'BT076310700', 'BT076456585', 'BT070441691', 'BT080124562', 'BT081399751', 'BT047750679', 'BT043582399', 'BT036278145', 'BT009154914', 'BT031979625', 'BT080797346', 'BT082730346', 'BT082745785', 'BT016345466', 'BT082756388', 'BT082591966', 'BT078945699', 'BT042634549', 'BT082615539', 'BT046105338', 'BT013594406', 'BT050081877', 'BT074546820', 'BT082580620', 'BT081946418', 'BT082470310', 'BT081225257', 'BT082525483', 'BT082529543', 'BT008970912', 'BT082440534', 'BT032842976', 'BT041214058', 'BT077113169', 'BT081295620', 'BT081475369', 'BT034351236', 'BT082314334', 'BT082318321', 'BT039571170', 'BT038082001', 'BT045545423', 'BT082284176', 'BT017472879', 'BT031452791', 'BT037167088', 'BT079894915', 'BT082178198', 'BT074265031', 'BT082211578', 'BT082109412', 'BT082110801', 'BT047603773', 'BT080957157', 'BT018068575', 'BT082052593', 'BT031922666', 'BT003581331', 'BT016040428', 'BT045992730', 'BT038299174', 'BT082003703', 'BT070655781', 'BT079607606', 'BT048972292', 'BT081288216', 'BT081275157', 'BT081293538', 'BT081303339', 'BT050844021', 'BT081334889', 'BT039462711', 'BT070368978', 'BT013053928', 'BT081412006', 'BT043299972', 'BT081419906', 'BT080288409', 'BT081430489', 'BT046629931', 'BT031029511', 'BT033517467', 'BT079975826', 'BT081479691', 'BT081485836', 'BT081492042', 'BT077299777', 'BT031277116', 'BT017768786', 'BT081516456', 'BT012492596', 'BT031114551', 'BT081528951', 'BT081529931', 'BT076922721', 'BT041742241', 'BT081541264', 'BT081544841', 'BT074152261', 'BT013115087', 'BT081565317', 'BT014534334', 'BT007723822', 'BT049338287', 'BT081635021', 'BT039296403', 'BT048825681', 'BT081654310', 'BT049065302', 'BT079316334', 'BT071030199', 'BT081716978', 'BT081732264', 'BT081743070', 'BT048254187', 'BT081781931', 'BT081785139', 'BT045681092', 'BT081792364', 'BT079159077', 'BT075103123', 'BT081808422', 'BT081814317', 'BT008295476', 'BT012981775', 'BT073395453', 'BT037878472', 'BT017209426', 'BT071521427', 'BT046668901', 'BT013447420', 'BT015964685', 'BT006363130', 'BT080634714', 'BT075479425', 'BT079918636', 'BT080645457', 'BT050410412', 'BT015221615', 'BT080664699', 'BT076297207', 'BT080677758', 'BT080678754', 'BT080681119', 'BT015628383', 'BT077852280', 'BT080705476', 'BT041891572', 'BT074514774', 'BT079855162', 'BT010498236', 'BT042981052', 'BT080760353', 'BT072584571', 'BT050800075', 'BT080784881', 'BT016042889', 'BT040064397', 'BT078394811', 'BT048843182', 'BT012479719', 'BT080853581', 'BT078554541', 'BT043383264', 'BT009046127', 'BT041898518', 'BT074080979', 'BT080891881', 'BT080909683', 'BT079763136', 'BT012453698', 'BT080926464', 'BT080938951', 'BT078760231', 'BT015123036', 'BT080971184', 'BT079191434', 'BT080984812', 'BT044593556', 'BT039745372', 'BT079249360', 'BT081026289', 'BT016128562', 'BT039638941', 'BT048618065', 'BT032139264', 'BT077592750', 'BT039077761', 'BT081159947', 'BT081173192', 'BT047249228', 'BT081218439', 'BT043342801', 'BT079214159', 'BT081960071', 'BT014405739', 'BT003133794', 'BT082049690', 'BT070206897', 'BT070926695', 'BT074569218', 'BT076333301', 'BT071898202', 'BT082315217', 'BT039600897', 'BT007656335', 'BT082332286', 'BT045744809', 'BT082362886', 'BT013034681', 'BT075442254', 'BT082384715', 'BT046083750', 'BT082408860', 'BT081465312', 'BT047406986', 'BT002236209', 'BT003060739', 'BT004410297', 'BT082650881', 'BT082690531', 'BT015421681', 'BT035179143']\n"]}],"source":["import os\n","\n","# Check if base_dir_path exists and list its contents\n","print(f\"Checking base_dir_path: {base_dir_path}\")\n","if os.path.exists(base_dir_path):\n","    print(f\"Contents of {base_dir_path}: {os.listdir(base_dir_path)}\")\n","else:\n","    print(f\"Directory {base_dir_path} does not exist.\")\n","\n","# Check if comb_dir exists and list its contents\n","print(f\"\\nChecking comb_dir: {comb_dir}\")\n","if os.path.exists(comb_dir):\n","    print(f\"Contents of {comb_dir}: {os.listdir(comb_dir)}\")\n","else:\n","    print(f\"Directory {comb_dir} does not exist.\")\n"]},{"cell_type":"markdown","metadata":{"id":"amVsUfW-kJsJ"},"source":["# Data Preparation and Preprocessing"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":19235,"status":"ok","timestamp":1737304937673,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"},"user_tz":360},"id":"LQEEaoYp4R-8","outputId":"52a9c8bb-df94-4818-9068-2a946e509e8a"},"outputs":[{"output_type":"stream","name":"stdout","text":["No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","No BT_ID for patient with Identifier nan, skipping.\n","Patient BT000153389 does not have all required views.\n","Patient BT003523021 does not have all required views.\n","Patient BT004339274 does not have all required views.\n","Patient BT005325471 does not have all required views.\n","Patient BT040582096 does not have all required views.\n","Patient BT081447632 does not have all required views.\n","Patient BT080781351 does not have all required views.\n","Patient BT081254460 does not have all required views.\n","Patient BT044564611 does not have all required views.\n","Patient BT081693293 does not have all required views.\n","Patient BT081897395 does not have all required views.\n","Patient BT050205274 does not have all required views.\n","Patient BT079831280 does not have all required views.\n","Patient BT080482248 does not have all required views.\n","Patient BT006298818 does not have all required views.\n","Patient BT006590918 does not have all required views.\n","Patient BT076126615 does not have all required views.\n","Patient BT052465443 does not have all required views.\n","Patient BT071826147 does not have all required views.\n","Patient BT015238607 does not have all required views.\n","Patient BT081441286 does not have all required views.\n","Patient BT080099231 does not have all required views.\n","Patient BT032612300 does not have all required views.\n","Patient BT050815145 does not have all required views.\n","Patient BT014022368 does not have all required views.\n","BT_ID BT050569942 from directory BT050569942 not found in label_mapping.\n","BT_ID BT72022807 from directory BT72022807 not found in label_mapping.\n","BT_ID BT80645082 from directory BT80645082 not found in label_mapping.\n","Patient BT079928224 does not have all required views.\n","Patient BT047540861 does not have all required views.\n","Patient BT081450854 does not have all required views.\n","Patient BT044772892 does not have all required views.\n","Patient BT047750679 does not have all required views.\n","Patient BT036278145 does not have all required views.\n","Patient BT016345466 does not have all required views.\n","Patient BT081303339 does not have all required views.\n","BT_ID BT007723822 from directory BT007723822 not found in label_mapping.\n","BT_ID BT008295476 from directory BT008295476 not found in label_mapping.\n","Patient BT073395453 does not have all required views.\n","BT_ID BT006363130 from directory BT006363130 not found in label_mapping.\n","\n","Number of patients with all three views: 495\n"]}],"source":["# Paths\n","cwd = os.getcwd()\n","all_gs_images_dir = os.path.join(cwd, 'Images', 'All_GS_Images')\n","excel_file_path = os.path.join(cwd, 'Images', 'New_images_3views', 'Modified AI DRF Collection Sheet.xlsx')\n","\n","# Load the Excel file into a pandas DataFrame\n","df = pd.read_excel(excel_file_path, dtype={'Identifier': str})  # Ensure Identifiers are read as strings\n","df['Identifier'] = df['Identifier'].astype(str)  # Convert to string for consistency\n","df['BT_ID'] = df['Identifier'].apply(lambda text: re.search(r'BT\\d+', text).group() if re.search(r'BT\\d+', text) else None)\n","\n","# Get unique BT IDs from the DataFrame\n","unique_df_bt_ids = set(df['BT_ID'].dropna().unique())\n","\n","# Create mappings for patient images and labels\n","patient_image_mapping = defaultdict(dict)  # Mapping patient IDs to their images per view\n","label_mapping = {}\n","\n","# Build label_mapping with BT_ID as the key\n","for _, row in df.iterrows():\n","    bt_id = row['BT_ID']  # e.g., 'BT035179143'\n","    label = row['Op_Non-op']  # Ensure this matches the actual values in the 'Op_Non-op' column\n","    if pd.isna(bt_id):\n","        print(f\"No BT_ID for patient with Identifier {row['Identifier']}, skipping.\")\n","        continue\n","    label_mapping[bt_id] = label\n","\n","# Now, iterate over the patient directories in 'All_GS_Images'\n","patient_dirs = [d for d in os.listdir(all_gs_images_dir) if os.path.isdir(os.path.join(all_gs_images_dir, d))]\n","\n","# Define the views we are interested in\n","desired_views = ['ap', 'lat', 'ob']  # Change as needed\n","\n","for dir_name in patient_dirs:\n","    patient_dir_path = os.path.join(all_gs_images_dir, dir_name)\n","    bt_id = dir_name  # e.g., 'BT035179143'\n","\n","    # Check if this bt_id exists in label_mapping\n","    if bt_id in label_mapping:\n","        # Get the images in this directory\n","        image_files = os.listdir(patient_dir_path)\n","        view_images = {view: None for view in desired_views}\n","        for view in desired_views:\n","            matched_images = [img for img in image_files if view in img]\n","            if matched_images:\n","                # Take the first image matching the view\n","                view_images[view] = os.path.join(patient_dir_path, matched_images[0])\n","        # Check if all desired views are present\n","        if all(view_images.values()):\n","            patient_image_mapping[bt_id] = view_images\n","        else:\n","            print(f\"Patient {bt_id} does not have all required views.\")\n","    else:\n","        print(f\"BT_ID {bt_id} from directory {dir_name} not found in label_mapping.\")\n","\n","# After mapping, check the number of patients mapped\n","print(f\"\\nNumber of patients with all three views: {len(patient_image_mapping)}\")\n"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":166,"status":"ok","timestamp":1737304953983,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"},"user_tz":360},"id":"I05wG--vuTlV","outputId":"b782e7e0-18ca-4437-fdce-97826f6a4ba9"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Sample of label_mapping:\n","BT_ID: BT040582096, Label: 1.0\n","BT_ID: BT081447632, Label: 1.0\n","BT_ID: BT080781351, Label: 1.0\n","BT_ID: BT081254460, Label: 1.0\n","BT_ID: BT044564611, Label: 1.0\n","BT_ID: BT081693293, Label: 1.0\n","\n","Sample of patient_image_mapping:\n","BT_ID: BT035317309, Image Paths: {'ap': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT035317309/BT035317309ap.png', 'lat': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT035317309/BT035317309lat.png', 'ob': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT035317309/BT035317309ob.png'}\n","BT_ID: BT037253481, Image Paths: {'ap': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT037253481/BT037253481ap.png', 'lat': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT037253481/BT037253481lat.png', 'ob': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT037253481/BT037253481ob.png'}\n","BT_ID: BT080429011, Image Paths: {'ap': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT080429011/BT080429011ap.png', 'lat': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT080429011/BT080429011lat.png', 'ob': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT080429011/BT080429011ob.png'}\n","BT_ID: BT046175883, Image Paths: {'ap': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT046175883/BT046175883ap.png', 'lat': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT046175883/BT046175883lat.png', 'ob': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT046175883/BT046175883ob.png'}\n","BT_ID: BT081220395, Image Paths: {'ap': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT081220395/BT081220395ap.png', 'lat': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT081220395/BT081220395lat.png', 'ob': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT081220395/BT081220395ob.png'}\n","BT_ID: BT076000034, Image Paths: {'ap': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT076000034/BT076000034ap.png', 'lat': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT076000034/BT076000034lat.png', 'ob': '/content/drive/.shortcut-targets-by-id/1fgsl4tS45FxcxsyCCpDDbMQYcpqaMsBP/AI-DRF/Images/All_GS_Images/BT076000034/BT076000034ob.png'}\n"]}],"source":["# Verify label_mapping\n","print(\"\\nSample of label_mapping:\")\n","for i, (bt_id, label) in enumerate(label_mapping.items()):\n","    print(f\"BT_ID: {bt_id}, Label: {label}\")\n","    if i >= 5:\n","        break\n","\n","# Verify patient_image_mapping\n","print(\"\\nSample of patient_image_mapping:\")\n","for i, (bt_id, img_paths) in enumerate(patient_image_mapping.items()):\n","    print(f\"BT_ID: {bt_id}, Image Paths: {img_paths}\")\n","    if i >= 5:\n","        break"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":198,"status":"ok","timestamp":1737304955606,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"},"user_tz":360},"id":"oxTuhoeJ4bXU","outputId":"c7a57686-372d-4003-f554-2b475ac51e8b"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Label counts: Counter({1: 286, 0: 209})\n"]}],"source":["# Image preprocessing function\n","def preprocess_image(img_path):\n","    img = keras_image.load_img(img_path, target_size=(image_height, image_width))\n","    img_array = keras_image.img_to_array(img)\n","    img_array = preprocess_input(img_array)  # Preprocessing specific to DenseNet\n","    return img_array\n","\n","from collections import Counter\n","\n","# Get the list of patient IDs and labels from the mappings\n","unique_patient_ids = list(patient_image_mapping.keys())\n","patient_labels = [label_mapping[bt_id] for bt_id in unique_patient_ids]\n","\n","# Ensure labels are integers (assuming your labels are categorical integers)\n","patient_labels = [int(label) for label in patient_labels]\n","\n","# Check the distribution of labels\n","label_counts = Counter(patient_labels)\n","print(\"\\nLabel counts:\", label_counts)\n"]},{"cell_type":"markdown","metadata":{"id":"klQuOYJMkdko"},"source":["# Custom Functions and Helper Methods"]},{"cell_type":"markdown","metadata":{"id":"1uSAmZPvklsC"},"source":["# Data Generators and K-Fold Splitting"]},{"cell_type":"markdown","metadata":{"id":"VQu0NKsn72sO"},"source":["The output here might be a bit confusing. Because we are using kfold cross-validation, our validation set length will be n patients we have over all folds, and training set length will be (k-1)*n patients.\n","\n","This is because each patient appears in the training set in all folds except the one where they are in the validation set. So, over 5 folds, each patient is counted in the training set 4 times.\n","\n","For example, if we have 504 patients with images in our data set, over all folds, we will have a validation set of 504 and a training set of 2016!"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":110,"status":"ok","timestamp":1737304957994,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"},"user_tz":360},"id":"7xIio3FX4k5B","outputId":"c39f19fe-0c70-445b-cc67-776af5a94c3f"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n","Training set length: 1980\n","Validation set length: 495\n"]}],"source":["# Adjust number of folds if necessary\n","min_samples_per_class = min(label_counts.values())\n","if num_folds > min_samples_per_class:\n","    num_folds = min_samples_per_class\n","    print(f\"Adjusted number of folds to {num_folds} due to limited samples in some classes.\")\n","\n","# Perform stratified K-Fold splitting\n","skf = StratifiedKFold(n_splits=num_folds, shuffle=True, random_state=42)\n","train_patient_ids_list, val_patient_ids_list = [], []\n","\n","for train_index, val_index in skf.split(unique_patient_ids, patient_labels):\n","    train_patient_ids = [unique_patient_ids[i] for i in train_index]\n","    val_patient_ids = [unique_patient_ids[i] for i in val_index]\n","    train_patient_ids_list.append(train_patient_ids)\n","    val_patient_ids_list.append(val_patient_ids)\n","\n","# Print training and validation set lengths\n","print(f\"\\nTraining set length: {sum([len(ids) for ids in train_patient_ids_list])}\")\n","print(f\"Validation set length: {sum([len(ids) for ids in val_patient_ids_list])}\")\n"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"QPWBZA9M4lru","executionInfo":{"status":"ok","timestamp":1737304959788,"user_tz":360,"elapsed":145,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"outputs":[],"source":["# Modify the __data_generation method in the DataGenerator class\n","class DataGenerator(Sequence):\n","    def __init__(self, patient_ids, patient_image_mapping, label_mapping, batch_size, num_classes):\n","        self.patient_ids = patient_ids\n","        self.patient_image_mapping = patient_image_mapping\n","        self.label_mapping = label_mapping\n","        self.batch_size = batch_size\n","        self.num_classes = num_classes\n","        self.indexes = np.arange(len(self.patient_ids))\n","        self.on_epoch_end()\n","\n","    def __len__(self):\n","        return int(np.ceil(len(self.patient_ids) / self.batch_size))\n","\n","    def __getitem__(self, index):\n","        # Generate indexes of the batch\n","        batch_indexes = self.indexes[index*self.batch_size:(index+1)*self.batch_size]\n","        # Find list of IDs\n","        batch_patient_ids = [self.patient_ids[k] for k in batch_indexes]\n","        # Generate data\n","        return self.__data_generation(batch_patient_ids)\n","\n","    def on_epoch_end(self):\n","        np.random.shuffle(self.indexes)\n","\n","    def __data_generation(self, batch_patient_ids):\n","        batch_images_ap = []\n","        batch_images_lat = []\n","        batch_images_ob = []\n","        batch_labels = []\n","\n","        for bt_id in batch_patient_ids:\n","            view_images = self.patient_image_mapping.get(bt_id)\n","            if view_images and all(view_images.values()):\n","                images = {}\n","                skip_patient = False\n","                for view in desired_views:\n","                    img_path = view_images[view]\n","                    if os.path.exists(img_path):\n","                        img_array = preprocess_image(img_path)\n","                        images[view] = img_array\n","                    else:\n","                        print(f\"Image not found: {img_path}\")\n","                        skip_patient = True\n","                        break\n","                if skip_patient:\n","                    continue\n","                batch_images_ap.append(images['ap'])\n","                batch_images_lat.append(images['lat'])\n","                batch_images_ob.append(images['ob'])\n","\n","                label = self.label_mapping.get(bt_id)\n","                if label is not None:\n","                    batch_labels.append([float(label)])  # Ensure labels are in 2D format: [[0], [1], ...]\n","                else:\n","                    continue  # Skip if no label found\n","            else:\n","                continue  # Skip if any view image is missing\n","\n","        # Convert to arrays and return as a dictionary\n","        inputs = {\n","           'input_ap': np.array(batch_images_ap),\n","            'input_lat': np.array(batch_images_lat),\n","            'input_ob': np.array(batch_images_ob)\n","        }\n","        return inputs, np.array(batch_labels)\n"]},{"cell_type":"markdown","source":["### F1 Score creation. Testing"],"metadata":{"id":"iF267GCTP-Qk"}},{"cell_type":"code","execution_count":8,"metadata":{"id":"dJA3kNBaezWX","executionInfo":{"status":"ok","timestamp":1737304962809,"user_tz":360,"elapsed":148,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"outputs":[],"source":["import tensorflow.keras.backend as K\n","from tensorflow.keras.metrics import Precision, Recall\n","\n","@tf.keras.utils.register_keras_serializable(package='Custom', name='F1Score')\n","class F1Score(tf.keras.metrics.Metric):\n","    def __init__(self, name='f1_score', **kwargs):\n","        super(F1Score, self).__init__(name=name, **kwargs)\n","        self.precision = Precision()\n","        self.recall = Recall()\n","\n","    def update_state(self, y_true, y_pred, sample_weight=None):\n","        self.precision.update_state(y_true, y_pred, sample_weight)\n","        self.recall.update_state(y_true, y_pred, sample_weight)\n","\n","    def result(self):\n","        p = self.precision.result()\n","        r = self.recall.result()\n","        return 2 * ((p * r) / (p + r + K.epsilon()))\n","\n","    def reset_states(self):\n","        self.precision.reset_state()\n","        self.recall.reset_state()"]},{"cell_type":"markdown","source":["### Debug"],"metadata":{"id":"aDfx79h6OBZU"}},{"cell_type":"code","source":["# test to see if this thing is even working\n","\n","# Instantiate the data generator\n","train_generator = DataGenerator(train_patient_ids_list[0], patient_image_mapping, label_mapping, patients_per_batch, num_classes)\n","\n","# Get the first batch\n","inputs, labels = train_generator[0]\n","\n","# Check the shapes of the inputs and labels\n","print(f\"AP images shape: {inputs['input_ap'].shape}\")\n","print(f\"Lateral images shape: {inputs['input_lat'].shape}\")\n","print(f\"Oblique images shape: {inputs['input_ob'].shape}\")\n","print(f\"Labels shape: {labels.shape}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2uSqwv_WN06w","executionInfo":{"status":"ok","timestamp":1737304973409,"user_tz":360,"elapsed":9500,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}},"outputId":"c2132ad2-291e-4127-f66b-04bf1032561e"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["AP images shape: (9, 224, 224, 3)\n","Lateral images shape: (9, 224, 224, 3)\n","Oblique images shape: (9, 224, 224, 3)\n","Labels shape: (9, 1)\n"]}]},{"cell_type":"markdown","metadata":{"id":"XV5ea_7nkswE"},"source":["# Model Creation and Training"]},{"cell_type":"code","execution_count":14,"metadata":{"id":"9kQFzVzTaJSM","executionInfo":{"status":"ok","timestamp":1737306467054,"user_tz":360,"elapsed":917,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"outputs":[],"source":["tf.keras.backend.clear_session()"]},{"cell_type":"code","execution_count":15,"metadata":{"id":"aY1BLwgOxAuM","executionInfo":{"status":"ok","timestamp":1737306467859,"user_tz":360,"elapsed":141,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"outputs":[],"source":["# Function to create the model with separate inputs for each view\n","def create_multi_input_densenet_model(num_classes, num_top_layers_to_train):\n","    # Create input layers for each view\n","    input_ap = Input(shape=input_shape, name='input_ap')\n","    input_lat = Input(shape=input_shape, name='input_lat')\n","    input_ob = Input(shape=input_shape, name='input_ob')\n","\n","    # Create separate base models for each view with unique names\n","    base_model_ap = DenseNet169(weights='imagenet', include_top=False, input_shape=input_shape, name='densenet_ap')\n","    base_model_lat = DenseNet169(weights='imagenet', include_top=False, input_shape=input_shape, name='densenet_lat')\n","    base_model_ob = DenseNet169(weights='imagenet', include_top=False, input_shape=input_shape, name='densenet_ob')\n","\n","    # Apply the base models to the inputs\n","    x_ap = base_model_ap(input_ap)\n","    x_lat = base_model_lat(input_lat)\n","    x_ob = base_model_ob(input_ob)\n","\n","    # Optionally freeze layers\n","    for model in [base_model_ap, base_model_lat, base_model_ob]:\n","        for layer in model.layers[:-num_top_layers_to_train]:\n","            layer.trainable = False\n","        for layer in model.layers[-num_top_layers_to_train:]:\n","            layer.trainable = True\n","\n","    # Global average pooling for each\n","    x_ap = GlobalAveragePooling2D()(x_ap)\n","    x_lat = GlobalAveragePooling2D()(x_lat)\n","    x_ob = GlobalAveragePooling2D()(x_ob)\n","\n","    # Concatenate the outputs\n","    x = Concatenate()([x_ap, x_lat, x_ob])\n","\n","    # Add fully connected layers\n","    x = Dense(1024, activation='relu')(x) # just take predictions from model without sigmoid activation function for ensemble\n","    predictions = Dense(num_classes, activation='sigmoid')(x)  # Use softmax for multi-class classification\n","\n","    # Create the model\n","    model = Model(inputs=[input_ap, input_lat, input_ob], outputs=predictions)\n","    return model\n","\n","## try concatenating after dense => ensemble model?\n","\n","# Initialize lists to store metrics\n","accuracy_train_list = []\n","precision_train_list = []\n","recall_train_list = []\n","auc_train_list = []\n","sensitivity_train_list = []\n","specificity_train_list = []\n","f1_score_train_list = []\n","\n","accuracy_val_list = []\n","precision_val_list = []\n","recall_val_list = []\n","auc_val_list = []\n","sensitivity_val_list = []\n","specificity_val_list = []\n","f1_score_val_list = []"]},{"cell_type":"code","execution_count":16,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":82695,"status":"ok","timestamp":1737311484322,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"},"user_tz":360},"id":"w5B7ReYekw28","outputId":"972ed01a-d39f-40e1-abe4-8b6b5b749c7d"},"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["Fold 1/5\n","Epoch 1/50\n"]},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.11/dist-packages/keras/src/trainers/data_adapters/py_dataset_adapter.py:122: UserWarning: Your `PyDataset` class should call `super().__init__(**kwargs)` in its constructor. `**kwargs` can include `workers`, `use_multiprocessing`, `max_queue_size`. Do not pass these arguments to `fit()`, as they will be ignored.\n","  self._warn_if_super_not_called()\n"]},{"output_type":"stream","name":"stdout","text":["\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m143s\u001b[0m 1s/step - accuracy: 0.6226 - auc: 0.6420 - f1_score: 0.6908 - loss: 2.4387 - precision: 0.6819 - recall: 0.7024 - sensitivity: 0.7138 - specificity: 0.7178 - val_accuracy: 0.6465 - val_auc: 0.8980 - val_f1_score: 0.5783 - val_loss: 0.7726 - val_precision: 0.9600 - val_recall: 0.4138 - val_sensitivity: 0.9483 - val_specificity: 0.9512 - learning_rate: 0.0010\n","Epoch 2/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 669ms/step - accuracy: 0.8778 - auc: 0.9427 - f1_score: 0.8945 - loss: 0.2972 - precision: 0.8835 - recall: 0.9061 - sensitivity: 0.9681 - specificity: 0.9849 - val_accuracy: 0.7980 - val_auc: 0.9066 - val_f1_score: 0.8485 - val_loss: 0.4680 - val_precision: 0.7568 - val_recall: 0.9655 - val_sensitivity: 0.9828 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 3/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 649ms/step - accuracy: 0.8763 - auc: 0.9348 - f1_score: 0.8889 - loss: 0.3752 - precision: 0.8722 - recall: 0.9115 - sensitivity: 0.9928 - specificity: 0.9707 - val_accuracy: 0.7374 - val_auc: 0.9306 - val_f1_score: 0.7174 - val_loss: 0.6359 - val_precision: 0.9706 - val_recall: 0.5690 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 4/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 639ms/step - accuracy: 0.9069 - auc: 0.9600 - f1_score: 0.9188 - loss: 0.2614 - precision: 0.9204 - recall: 0.9175 - sensitivity: 0.9823 - specificity: 0.9866 - val_accuracy: 0.5556 - val_auc: 0.9285 - val_f1_score: 0.3889 - val_loss: 1.3211 - val_precision: 1.0000 - val_recall: 0.2414 - val_sensitivity: 0.9310 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 5/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 659ms/step - accuracy: 0.7636 - auc: 0.8986 - f1_score: 0.7800 - loss: 0.5596 - precision: 0.8558 - recall: 0.7429 - sensitivity: 0.9488 - specificity: 0.9873 - val_accuracy: 0.8485 - val_auc: 0.9409 - val_f1_score: 0.8780 - val_loss: 0.3139 - val_precision: 0.8308 - val_recall: 0.9310 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 6/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 667ms/step - accuracy: 0.9353 - auc: 0.9793 - f1_score: 0.9444 - loss: 0.1871 - precision: 0.9519 - recall: 0.9378 - sensitivity: 0.9991 - specificity: 0.9960 - val_accuracy: 0.8485 - val_auc: 0.9474 - val_f1_score: 0.8598 - val_loss: 0.3593 - val_precision: 0.9388 - val_recall: 0.7931 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 7/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 660ms/step - accuracy: 0.9338 - auc: 0.9780 - f1_score: 0.9409 - loss: 0.1821 - precision: 0.9583 - recall: 0.9247 - sensitivity: 0.9951 - specificity: 0.9942 - val_accuracy: 0.7071 - val_auc: 0.9203 - val_f1_score: 0.8000 - val_loss: 0.8559 - val_precision: 0.6667 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 0.9268 - learning_rate: 0.0010\n","Epoch 8/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m34s\u001b[0m 676ms/step - accuracy: 0.7674 - auc: 0.8839 - f1_score: 0.7848 - loss: 0.6002 - precision: 0.7795 - recall: 0.8051 - sensitivity: 0.9594 - specificity: 0.9411 - val_accuracy: 0.8788 - val_auc: 0.9476 - val_f1_score: 0.9016 - val_loss: 0.3126 - val_precision: 0.8594 - val_recall: 0.9483 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 9/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 650ms/step - accuracy: 0.9090 - auc: 0.9648 - f1_score: 0.9197 - loss: 0.2451 - precision: 0.9158 - recall: 0.9245 - sensitivity: 0.9957 - specificity: 0.9955 - val_accuracy: 0.8485 - val_auc: 0.9481 - val_f1_score: 0.8598 - val_loss: 0.3603 - val_precision: 0.9388 - val_recall: 0.7931 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 10/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 667ms/step - accuracy: 0.9306 - auc: 0.9792 - f1_score: 0.9390 - loss: 0.1778 - precision: 0.9297 - recall: 0.9487 - sensitivity: 1.0000 - specificity: 0.9953 - val_accuracy: 0.8485 - val_auc: 0.9472 - val_f1_score: 0.8598 - val_loss: 0.3288 - val_precision: 0.9388 - val_recall: 0.7931 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 11/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 665ms/step - accuracy: 0.9537 - auc: 0.9861 - f1_score: 0.9604 - loss: 0.1766 - precision: 0.9666 - recall: 0.9547 - sensitivity: 1.0000 - specificity: 0.9931 - val_accuracy: 0.8384 - val_auc: 0.9472 - val_f1_score: 0.8545 - val_loss: 0.2930 - val_precision: 0.9038 - val_recall: 0.8103 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 12/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m33s\u001b[0m 654ms/step - accuracy: 0.9567 - auc: 0.9918 - f1_score: 0.9627 - loss: 0.1281 - precision: 0.9829 - recall: 0.9441 - sensitivity: 1.0000 - specificity: 0.9977 - val_accuracy: 0.8788 - val_auc: 0.9493 - val_f1_score: 0.8947 - val_loss: 0.2860 - val_precision: 0.9107 - val_recall: 0.8793 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 13/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 628ms/step - accuracy: 0.9287 - auc: 0.9812 - f1_score: 0.9382 - loss: 0.1737 - precision: 0.9453 - recall: 0.9319 - sensitivity: 0.9976 - specificity: 1.0000 - val_accuracy: 0.8586 - val_auc: 0.9487 - val_f1_score: 0.8750 - val_loss: 0.2885 - val_precision: 0.9074 - val_recall: 0.8448 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 14/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 634ms/step - accuracy: 0.9643 - auc: 0.9903 - f1_score: 0.9689 - loss: 0.1191 - precision: 0.9670 - recall: 0.9709 - sensitivity: 1.0000 - specificity: 0.9989 - val_accuracy: 0.7980 - val_auc: 0.9510 - val_f1_score: 0.8529 - val_loss: 0.4730 - val_precision: 0.7436 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 0.0010\n","Epoch 15/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 487ms/step - accuracy: 0.9424 - auc: 0.9896 - f1_score: 0.9500 - loss: 0.1484 - precision: 0.9419 - recall: 0.9590 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 15: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 633ms/step - accuracy: 0.9419 - auc: 0.9895 - f1_score: 0.9496 - loss: 0.1486 - precision: 0.9415 - recall: 0.9588 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.7879 - val_auc: 0.9424 - val_f1_score: 0.8467 - val_loss: 0.6564 - val_precision: 0.7342 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 0.9512 - learning_rate: 0.0010\n","Epoch 16/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 650ms/step - accuracy: 0.9229 - auc: 0.9702 - f1_score: 0.9384 - loss: 0.2071 - precision: 0.9229 - recall: 0.9567 - sensitivity: 0.9986 - specificity: 0.9815 - val_accuracy: 0.8586 - val_auc: 0.9493 - val_f1_score: 0.8750 - val_loss: 0.2816 - val_precision: 0.9074 - val_recall: 0.8448 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 5.0000e-04\n","Epoch 17/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 631ms/step - accuracy: 0.9871 - auc: 0.9995 - f1_score: 0.9892 - loss: 0.0509 - precision: 0.9824 - recall: 0.9961 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8182 - val_auc: 0.9485 - val_f1_score: 0.8269 - val_loss: 0.4676 - val_precision: 0.9348 - val_recall: 0.7414 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 5.0000e-04\n","Epoch 18/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 622ms/step - accuracy: 0.9455 - auc: 0.9939 - f1_score: 0.9524 - loss: 0.1293 - precision: 0.9580 - recall: 0.9487 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8485 - val_auc: 0.9428 - val_f1_score: 0.8673 - val_loss: 0.3145 - val_precision: 0.8909 - val_recall: 0.8448 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 5.0000e-04\n","Epoch 19/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 486ms/step - accuracy: 0.9588 - auc: 0.9902 - f1_score: 0.9649 - loss: 0.1095 - precision: 0.9729 - recall: 0.9574 - sensitivity: 1.0000 - specificity: 0.9958\n","Epoch 19: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 633ms/step - accuracy: 0.9585 - auc: 0.9901 - f1_score: 0.9646 - loss: 0.1103 - precision: 0.9725 - recall: 0.9573 - sensitivity: 1.0000 - specificity: 0.9958 - val_accuracy: 0.8586 - val_auc: 0.9390 - val_f1_score: 0.8889 - val_loss: 0.3850 - val_precision: 0.8235 - val_recall: 0.9655 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 5.0000e-04\n","Epoch 20/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 643ms/step - accuracy: 0.9618 - auc: 0.9964 - f1_score: 0.9662 - loss: 0.0804 - precision: 0.9589 - recall: 0.9740 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8384 - val_auc: 0.9441 - val_f1_score: 0.8571 - val_loss: 0.3111 - val_precision: 0.8889 - val_recall: 0.8276 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 2.5000e-04\n","Epoch 21/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 637ms/step - accuracy: 0.9711 - auc: 0.9976 - f1_score: 0.9761 - loss: 0.0774 - precision: 0.9757 - recall: 0.9767 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8586 - val_auc: 0.9470 - val_f1_score: 0.8704 - val_loss: 0.3371 - val_precision: 0.9400 - val_recall: 0.8103 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 2.5000e-04\n","Epoch 22/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 478ms/step - accuracy: 0.9570 - auc: 0.9911 - f1_score: 0.9638 - loss: 0.1067 - precision: 0.9547 - recall: 0.9732 - sensitivity: 1.0000 - specificity: 0.9976\n","Epoch 22: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 624ms/step - accuracy: 0.9565 - auc: 0.9910 - f1_score: 0.9633 - loss: 0.1076 - precision: 0.9542 - recall: 0.9727 - sensitivity: 1.0000 - specificity: 0.9977 - val_accuracy: 0.8788 - val_auc: 0.9481 - val_f1_score: 0.9032 - val_loss: 0.3157 - val_precision: 0.8485 - val_recall: 0.9655 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 2.5000e-04\n","Epoch 23/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 626ms/step - accuracy: 0.9900 - auc: 0.9991 - f1_score: 0.9915 - loss: 0.0533 - precision: 0.9900 - recall: 0.9930 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9485 - val_f1_score: 0.8889 - val_loss: 0.2886 - val_precision: 0.8814 - val_recall: 0.8966 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 1.2500e-04\n","Epoch 24/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 626ms/step - accuracy: 0.9841 - auc: 0.9994 - f1_score: 0.9862 - loss: 0.0525 - precision: 0.9910 - recall: 0.9815 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8384 - val_auc: 0.9502 - val_f1_score: 0.8596 - val_loss: 0.2901 - val_precision: 0.8750 - val_recall: 0.8448 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 1.2500e-04\n","Epoch 25/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 489ms/step - accuracy: 0.9899 - auc: 0.9998 - f1_score: 0.9911 - loss: 0.0488 - precision: 0.9889 - recall: 0.9934 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 25: ReduceLROnPlateau reducing learning rate to 6.25000029685907e-05.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 634ms/step - accuracy: 0.9899 - auc: 0.9998 - f1_score: 0.9911 - loss: 0.0487 - precision: 0.9891 - recall: 0.9933 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9497 - val_f1_score: 0.9016 - val_loss: 0.3129 - val_precision: 0.8594 - val_recall: 0.9483 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 1.2500e-04\n","Epoch 26/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 644ms/step - accuracy: 0.9882 - auc: 0.9999 - f1_score: 0.9896 - loss: 0.0395 - precision: 0.9810 - recall: 0.9985 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8485 - val_auc: 0.9493 - val_f1_score: 0.8673 - val_loss: 0.2952 - val_precision: 0.8909 - val_recall: 0.8448 - val_sensitivity: 1.0000 - val_specificity: 0.9756 - learning_rate: 6.2500e-05\n","Fold 1 completed with 396 training patients and 99 validation patients.\n","Fold 2/5\n","Epoch 1/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m139s\u001b[0m 1s/step - accuracy: 0.5204 - auc: 0.5357 - f1_score: 0.5977 - loss: 2.6547 - precision: 0.5865 - recall: 0.6124 - sensitivity: 0.5464 - specificity: 0.5744 - val_accuracy: 0.4747 - val_auc: 0.9407 - val_f1_score: 0.1613 - val_loss: 1.0213 - val_precision: 1.0000 - val_recall: 0.0877 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 2/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 647ms/step - accuracy: 0.7363 - auc: 0.8337 - f1_score: 0.7527 - loss: 0.5247 - precision: 0.7974 - recall: 0.7265 - sensitivity: 0.9151 - specificity: 0.9042 - val_accuracy: 0.7778 - val_auc: 0.9856 - val_f1_score: 0.7609 - val_loss: 0.3915 - val_precision: 1.0000 - val_recall: 0.6140 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 3/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 640ms/step - accuracy: 0.8514 - auc: 0.9120 - f1_score: 0.8700 - loss: 0.3768 - precision: 0.8440 - recall: 0.8990 - sensitivity: 0.9534 - specificity: 0.9605 - val_accuracy: 0.8788 - val_auc: 0.9942 - val_f1_score: 0.8824 - val_loss: 0.3112 - val_precision: 1.0000 - val_recall: 0.7895 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 4/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 635ms/step - accuracy: 0.8977 - auc: 0.9596 - f1_score: 0.9091 - loss: 0.2697 - precision: 0.9125 - recall: 0.9070 - sensitivity: 0.9897 - specificity: 0.9988 - val_accuracy: 0.8586 - val_auc: 0.9981 - val_f1_score: 0.8906 - val_loss: 0.2394 - val_precision: 0.8028 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 5/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 636ms/step - accuracy: 0.8393 - auc: 0.9391 - f1_score: 0.8704 - loss: 0.3385 - precision: 0.8375 - recall: 0.9139 - sensitivity: 0.9851 - specificity: 0.9789 - val_accuracy: 0.9596 - val_auc: 0.9973 - val_f1_score: 0.9661 - val_loss: 0.1684 - val_precision: 0.9344 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 6/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 626ms/step - accuracy: 0.8527 - auc: 0.9389 - f1_score: 0.8774 - loss: 0.3109 - precision: 0.8671 - recall: 0.8891 - sensitivity: 0.9895 - specificity: 0.9775 - val_accuracy: 0.6869 - val_auc: 0.9960 - val_f1_score: 0.6265 - val_loss: 0.6829 - val_precision: 1.0000 - val_recall: 0.4561 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 7/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 625ms/step - accuracy: 0.8305 - auc: 0.9413 - f1_score: 0.8477 - loss: 0.3399 - precision: 0.8823 - recall: 0.8285 - sensitivity: 1.0000 - specificity: 0.9798 - val_accuracy: 0.9192 - val_auc: 0.9985 - val_f1_score: 0.9245 - val_loss: 0.1788 - val_precision: 1.0000 - val_recall: 0.8596 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 8/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 469ms/step - accuracy: 0.9072 - auc: 0.9727 - f1_score: 0.9209 - loss: 0.2102 - precision: 0.9079 - recall: 0.9347 - sensitivity: 0.9959 - specificity: 0.9990\n","Epoch 8: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 615ms/step - accuracy: 0.9067 - auc: 0.9725 - f1_score: 0.9205 - loss: 0.2112 - precision: 0.9075 - recall: 0.9343 - sensitivity: 0.9959 - specificity: 0.9989 - val_accuracy: 0.9091 - val_auc: 0.9990 - val_f1_score: 0.9143 - val_loss: 0.1861 - val_precision: 1.0000 - val_recall: 0.8421 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 9/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 623ms/step - accuracy: 0.9348 - auc: 0.9826 - f1_score: 0.9455 - loss: 0.1686 - precision: 0.9299 - recall: 0.9624 - sensitivity: 1.0000 - specificity: 0.9985 - val_accuracy: 0.7576 - val_auc: 0.9983 - val_f1_score: 0.7333 - val_loss: 0.4535 - val_precision: 1.0000 - val_recall: 0.5789 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 10/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 619ms/step - accuracy: 0.8924 - auc: 0.9782 - f1_score: 0.8948 - loss: 0.2357 - precision: 0.9609 - recall: 0.8446 - sensitivity: 0.9950 - specificity: 0.9989 - val_accuracy: 0.8586 - val_auc: 0.9981 - val_f1_score: 0.8600 - val_loss: 0.2770 - val_precision: 1.0000 - val_recall: 0.7544 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 11/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 635ms/step - accuracy: 0.9029 - auc: 0.9561 - f1_score: 0.9178 - loss: 0.2685 - precision: 0.9002 - recall: 0.9379 - sensitivity: 1.0000 - specificity: 0.9808 - val_accuracy: 0.9596 - val_auc: 0.9987 - val_f1_score: 0.9661 - val_loss: 0.1308 - val_precision: 0.9344 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 12/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 621ms/step - accuracy: 0.9482 - auc: 0.9872 - f1_score: 0.9564 - loss: 0.1502 - precision: 0.9470 - recall: 0.9663 - sensitivity: 0.9968 - specificity: 0.9996 - val_accuracy: 0.9495 - val_auc: 0.9987 - val_f1_score: 0.9580 - val_loss: 0.1344 - val_precision: 0.9194 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 13/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 619ms/step - accuracy: 0.9373 - auc: 0.9806 - f1_score: 0.9455 - loss: 0.1750 - precision: 0.9479 - recall: 0.9434 - sensitivity: 0.9975 - specificity: 0.9930 - val_accuracy: 0.8788 - val_auc: 0.9987 - val_f1_score: 0.9048 - val_loss: 0.2326 - val_precision: 0.8261 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 14/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 472ms/step - accuracy: 0.9584 - auc: 0.9928 - f1_score: 0.9651 - loss: 0.1331 - precision: 0.9478 - recall: 0.9836 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 14: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 618ms/step - accuracy: 0.9584 - auc: 0.9928 - f1_score: 0.9651 - loss: 0.1331 - precision: 0.9479 - recall: 0.9835 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9394 - val_auc: 0.9987 - val_f1_score: 0.9444 - val_loss: 0.1548 - val_precision: 1.0000 - val_recall: 0.8947 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 15/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 617ms/step - accuracy: 0.9391 - auc: 0.9854 - f1_score: 0.9474 - loss: 0.1553 - precision: 0.9369 - recall: 0.9588 - sensitivity: 1.0000 - specificity: 0.9948 - val_accuracy: 0.9394 - val_auc: 0.9987 - val_f1_score: 0.9444 - val_loss: 0.1361 - val_precision: 1.0000 - val_recall: 0.8947 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 2.5000e-04\n","Epoch 16/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 613ms/step - accuracy: 0.9766 - auc: 0.9986 - f1_score: 0.9782 - loss: 0.0774 - precision: 0.9753 - recall: 0.9814 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9293 - val_auc: 0.9992 - val_f1_score: 0.9421 - val_loss: 0.1394 - val_precision: 0.8906 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 2.5000e-04\n","Epoch 17/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 471ms/step - accuracy: 0.9450 - auc: 0.9911 - f1_score: 0.9546 - loss: 0.1419 - precision: 0.9330 - recall: 0.9778 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 17: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 615ms/step - accuracy: 0.9453 - auc: 0.9911 - f1_score: 0.9548 - loss: 0.1415 - precision: 0.9335 - recall: 0.9778 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9091 - val_auc: 0.9987 - val_f1_score: 0.9143 - val_loss: 0.1831 - val_precision: 1.0000 - val_recall: 0.8421 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 2.5000e-04\n","Epoch 18/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 631ms/step - accuracy: 0.9136 - auc: 0.9931 - f1_score: 0.9261 - loss: 0.1585 - precision: 0.9548 - recall: 0.9083 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9798 - val_auc: 0.9987 - val_f1_score: 0.9825 - val_loss: 0.1121 - val_precision: 0.9825 - val_recall: 0.9825 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.2500e-04\n","Epoch 19/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 627ms/step - accuracy: 0.9606 - auc: 0.9918 - f1_score: 0.9668 - loss: 0.1358 - precision: 0.9546 - recall: 0.9795 - sensitivity: 1.0000 - specificity: 0.9995 - val_accuracy: 0.9495 - val_auc: 0.9987 - val_f1_score: 0.9580 - val_loss: 0.1240 - val_precision: 0.9194 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.2500e-04\n","Epoch 20/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 616ms/step - accuracy: 0.9639 - auc: 0.9968 - f1_score: 0.9679 - loss: 0.1059 - precision: 0.9551 - recall: 0.9815 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9596 - val_auc: 0.9987 - val_f1_score: 0.9661 - val_loss: 0.1220 - val_precision: 0.9344 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.2500e-04\n","Epoch 21/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 467ms/step - accuracy: 0.9832 - auc: 0.9987 - f1_score: 0.9858 - loss: 0.0734 - precision: 0.9780 - recall: 0.9938 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 21: ReduceLROnPlateau reducing learning rate to 6.25000029685907e-05.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 610ms/step - accuracy: 0.9830 - auc: 0.9987 - f1_score: 0.9856 - loss: 0.0738 - precision: 0.9776 - recall: 0.9937 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9394 - val_auc: 0.9983 - val_f1_score: 0.9444 - val_loss: 0.1444 - val_precision: 1.0000 - val_recall: 0.8947 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.2500e-04\n","Epoch 22/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 631ms/step - accuracy: 0.9759 - auc: 0.9984 - f1_score: 0.9792 - loss: 0.0955 - precision: 0.9928 - recall: 0.9660 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9596 - val_auc: 0.9983 - val_f1_score: 0.9643 - val_loss: 0.1119 - val_precision: 0.9818 - val_recall: 0.9474 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 6.2500e-05\n","Epoch 23/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 627ms/step - accuracy: 0.9795 - auc: 0.9982 - f1_score: 0.9820 - loss: 0.0802 - precision: 0.9808 - recall: 0.9834 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9798 - val_auc: 0.9983 - val_f1_score: 0.9828 - val_loss: 0.1099 - val_precision: 0.9661 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 6.2500e-05\n","Epoch 24/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 620ms/step - accuracy: 0.9143 - auc: 0.9824 - f1_score: 0.9320 - loss: 0.1838 - precision: 0.9135 - recall: 0.9532 - sensitivity: 0.9986 - specificity: 1.0000 - val_accuracy: 0.9394 - val_auc: 0.9979 - val_f1_score: 0.9444 - val_loss: 0.1397 - val_precision: 1.0000 - val_recall: 0.8947 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 6.2500e-05\n","Epoch 25/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 616ms/step - accuracy: 0.9708 - auc: 0.9962 - f1_score: 0.9757 - loss: 0.1097 - precision: 0.9851 - recall: 0.9665 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9596 - val_auc: 0.9979 - val_f1_score: 0.9643 - val_loss: 0.1146 - val_precision: 0.9818 - val_recall: 0.9474 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 6.2500e-05\n","Epoch 26/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 474ms/step - accuracy: 0.9597 - auc: 0.9946 - f1_score: 0.9648 - loss: 0.1133 - precision: 0.9649 - recall: 0.9649 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 26: ReduceLROnPlateau reducing learning rate to 3.125000148429535e-05.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 620ms/step - accuracy: 0.9596 - auc: 0.9946 - f1_score: 0.9647 - loss: 0.1132 - precision: 0.9649 - recall: 0.9648 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9697 - val_auc: 0.9975 - val_f1_score: 0.9744 - val_loss: 0.1133 - val_precision: 0.9500 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 6.2500e-05\n","Epoch 27/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 615ms/step - accuracy: 0.9623 - auc: 0.9921 - f1_score: 0.9637 - loss: 0.1500 - precision: 0.9484 - recall: 0.9810 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9697 - val_auc: 0.9975 - val_f1_score: 0.9744 - val_loss: 0.1132 - val_precision: 0.9500 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 3.1250e-05\n","Epoch 28/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 615ms/step - accuracy: 0.9604 - auc: 0.9955 - f1_score: 0.9666 - loss: 0.1088 - precision: 0.9588 - recall: 0.9753 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9596 - val_auc: 0.9977 - val_f1_score: 0.9649 - val_loss: 0.1106 - val_precision: 0.9649 - val_recall: 0.9649 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 3.1250e-05\n","Epoch 29/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 467ms/step - accuracy: 0.9663 - auc: 0.9944 - f1_score: 0.9675 - loss: 0.1145 - precision: 0.9528 - recall: 0.9845 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 29: ReduceLROnPlateau reducing learning rate to 1.5625000742147677e-05.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.9668 - auc: 0.9945 - f1_score: 0.9680 - loss: 0.1137 - precision: 0.9535 - recall: 0.9845 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9697 - val_auc: 0.9973 - val_f1_score: 0.9744 - val_loss: 0.1108 - val_precision: 0.9500 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 3.1250e-05\n","Epoch 30/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 609ms/step - accuracy: 0.9726 - auc: 0.9978 - f1_score: 0.9763 - loss: 0.0876 - precision: 0.9668 - recall: 0.9861 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9596 - val_auc: 0.9971 - val_f1_score: 0.9643 - val_loss: 0.1106 - val_precision: 0.9818 - val_recall: 0.9474 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.5625e-05\n","Epoch 31/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 602ms/step - accuracy: 0.9517 - auc: 0.9967 - f1_score: 0.9539 - loss: 0.1000 - precision: 0.9480 - recall: 0.9608 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9697 - val_auc: 0.9973 - val_f1_score: 0.9744 - val_loss: 0.1105 - val_precision: 0.9500 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.5625e-05\n","Epoch 32/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 460ms/step - accuracy: 0.9836 - auc: 0.9978 - f1_score: 0.9851 - loss: 0.0870 - precision: 0.9887 - recall: 0.9816 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 32: ReduceLROnPlateau reducing learning rate to 7.812500371073838e-06.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 603ms/step - accuracy: 0.9835 - auc: 0.9978 - f1_score: 0.9850 - loss: 0.0874 - precision: 0.9888 - recall: 0.9813 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9697 - val_auc: 0.9973 - val_f1_score: 0.9744 - val_loss: 0.1126 - val_precision: 0.9500 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.5625e-05\n","Epoch 33/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 613ms/step - accuracy: 0.9853 - auc: 0.9977 - f1_score: 0.9873 - loss: 0.0719 - precision: 0.9750 - recall: 1.0000 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9697 - val_auc: 0.9973 - val_f1_score: 0.9744 - val_loss: 0.1115 - val_precision: 0.9500 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 7.8125e-06\n","Fold 2 completed with 396 training patients and 99 validation patients.\n","Fold 3/5\n","Epoch 1/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m135s\u001b[0m 1s/step - accuracy: 0.5761 - auc: 0.5845 - f1_score: 0.6265 - loss: 1.9648 - precision: 0.6193 - recall: 0.6369 - sensitivity: 0.5806 - specificity: 0.5727 - val_accuracy: 0.6263 - val_auc: 0.8979 - val_f1_score: 0.5432 - val_loss: 0.6308 - val_precision: 0.9167 - val_recall: 0.3860 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 0.0010\n","Epoch 2/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 633ms/step - accuracy: 0.6969 - auc: 0.7979 - f1_score: 0.7394 - loss: 0.6185 - precision: 0.7170 - recall: 0.7694 - sensitivity: 0.8605 - specificity: 0.8958 - val_accuracy: 0.8788 - val_auc: 0.9102 - val_f1_score: 0.9032 - val_loss: 0.3784 - val_precision: 0.8358 - val_recall: 0.9825 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 0.0010\n","Epoch 3/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 623ms/step - accuracy: 0.8551 - auc: 0.9342 - f1_score: 0.8797 - loss: 0.3541 - precision: 0.8370 - recall: 0.9295 - sensitivity: 0.9878 - specificity: 0.9780 - val_accuracy: 0.8687 - val_auc: 0.9171 - val_f1_score: 0.8870 - val_loss: 0.3417 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 0.0010\n","Epoch 4/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 629ms/step - accuracy: 0.8150 - auc: 0.9231 - f1_score: 0.8321 - loss: 0.3525 - precision: 0.8510 - recall: 0.8171 - sensitivity: 0.9794 - specificity: 0.9685 - val_accuracy: 0.8889 - val_auc: 0.9236 - val_f1_score: 0.9091 - val_loss: 0.3284 - val_precision: 0.8594 - val_recall: 0.9649 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 0.0010\n","Epoch 5/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 627ms/step - accuracy: 0.8528 - auc: 0.9421 - f1_score: 0.8649 - loss: 0.3072 - precision: 0.8615 - recall: 0.8710 - sensitivity: 0.9742 - specificity: 1.0000 - val_accuracy: 0.8889 - val_auc: 0.9219 - val_f1_score: 0.9060 - val_loss: 0.3235 - val_precision: 0.8833 - val_recall: 0.9298 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 0.0010\n","Epoch 6/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 609ms/step - accuracy: 0.9241 - auc: 0.9795 - f1_score: 0.9377 - loss: 0.1811 - precision: 0.9237 - recall: 0.9527 - sensitivity: 0.9977 - specificity: 1.0000 - val_accuracy: 0.7374 - val_auc: 0.9267 - val_f1_score: 0.7292 - val_loss: 0.5186 - val_precision: 0.8974 - val_recall: 0.6140 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 0.0010\n","Epoch 7/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 622ms/step - accuracy: 0.9135 - auc: 0.9812 - f1_score: 0.9234 - loss: 0.1823 - precision: 0.9324 - recall: 0.9166 - sensitivity: 0.9927 - specificity: 1.0000 - val_accuracy: 0.8586 - val_auc: 0.9275 - val_f1_score: 0.8704 - val_loss: 0.3810 - val_precision: 0.9216 - val_recall: 0.8246 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 0.0010\n","Epoch 8/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 478ms/step - accuracy: 0.9443 - auc: 0.9884 - f1_score: 0.9514 - loss: 0.1482 - precision: 0.9669 - recall: 0.9372 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 8: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 618ms/step - accuracy: 0.9442 - auc: 0.9883 - f1_score: 0.9513 - loss: 0.1482 - precision: 0.9666 - recall: 0.9372 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8990 - val_auc: 0.9279 - val_f1_score: 0.9167 - val_loss: 0.3324 - val_precision: 0.8730 - val_recall: 0.9649 - val_sensitivity: 1.0000 - val_specificity: 0.9286 - learning_rate: 0.0010\n","Epoch 9/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 616ms/step - accuracy: 0.9177 - auc: 0.9838 - f1_score: 0.9237 - loss: 0.1744 - precision: 0.9361 - recall: 0.9124 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9240 - val_f1_score: 0.9048 - val_loss: 0.4536 - val_precision: 0.8261 - val_recall: 1.0000 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 5.0000e-04\n","Epoch 10/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 622ms/step - accuracy: 0.9751 - auc: 0.9950 - f1_score: 0.9790 - loss: 0.1011 - precision: 0.9836 - recall: 0.9745 - sensitivity: 1.0000 - specificity: 0.9996 - val_accuracy: 0.8990 - val_auc: 0.9294 - val_f1_score: 0.9123 - val_loss: 0.3259 - val_precision: 0.9123 - val_recall: 0.9123 - val_sensitivity: 1.0000 - val_specificity: 0.9286 - learning_rate: 5.0000e-04\n","Epoch 11/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 473ms/step - accuracy: 0.8618 - auc: 0.9596 - f1_score: 0.8721 - loss: 0.2752 - precision: 0.8676 - recall: 0.8858 - sensitivity: 1.0000 - specificity: 0.9980\n","Epoch 11: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 614ms/step - accuracy: 0.8621 - auc: 0.9594 - f1_score: 0.8726 - loss: 0.2753 - precision: 0.8676 - recall: 0.8865 - sensitivity: 1.0000 - specificity: 0.9978 - val_accuracy: 0.8889 - val_auc: 0.9261 - val_f1_score: 0.9091 - val_loss: 0.3730 - val_precision: 0.8594 - val_recall: 0.9649 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 5.0000e-04\n","Epoch 12/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 621ms/step - accuracy: 0.9570 - auc: 0.9952 - f1_score: 0.9617 - loss: 0.1199 - precision: 0.9869 - recall: 0.9384 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.9091 - val_auc: 0.9279 - val_f1_score: 0.9244 - val_loss: 0.3434 - val_precision: 0.8871 - val_recall: 0.9649 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 2.5000e-04\n","Epoch 13/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 617ms/step - accuracy: 0.9741 - auc: 0.9950 - f1_score: 0.9783 - loss: 0.0962 - precision: 0.9672 - recall: 0.9898 - sensitivity: 1.0000 - specificity: 0.9953 - val_accuracy: 0.8990 - val_auc: 0.9284 - val_f1_score: 0.9167 - val_loss: 0.3733 - val_precision: 0.8730 - val_recall: 0.9649 - val_sensitivity: 1.0000 - val_specificity: 0.9286 - learning_rate: 2.5000e-04\n","Epoch 14/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 480ms/step - accuracy: 0.9482 - auc: 0.9847 - f1_score: 0.9564 - loss: 0.1628 - precision: 0.9479 - recall: 0.9654 - sensitivity: 1.0000 - specificity: 0.9987\n","Epoch 14: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 622ms/step - accuracy: 0.9484 - auc: 0.9848 - f1_score: 0.9565 - loss: 0.1620 - precision: 0.9481 - recall: 0.9655 - sensitivity: 1.0000 - specificity: 0.9987 - val_accuracy: 0.9091 - val_auc: 0.9288 - val_f1_score: 0.9231 - val_loss: 0.3393 - val_precision: 0.9000 - val_recall: 0.9474 - val_sensitivity: 1.0000 - val_specificity: 0.9048 - learning_rate: 2.5000e-04\n","Epoch 15/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 616ms/step - accuracy: 0.9856 - auc: 0.9991 - f1_score: 0.9874 - loss: 0.0685 - precision: 0.9979 - recall: 0.9772 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8990 - val_auc: 0.9261 - val_f1_score: 0.9153 - val_loss: 0.3453 - val_precision: 0.8852 - val_recall: 0.9474 - val_sensitivity: 1.0000 - val_specificity: 0.9286 - learning_rate: 1.2500e-04\n","Fold 3 completed with 396 training patients and 99 validation patients.\n","Fold 4/5\n","Epoch 1/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m133s\u001b[0m 1s/step - accuracy: 0.5656 - auc: 0.5613 - f1_score: 0.5559 - loss: 2.6494 - precision: 0.5624 - recall: 0.5524 - sensitivity: 0.5526 - specificity: 0.5825 - val_accuracy: 0.8283 - val_auc: 0.9359 - val_f1_score: 0.8440 - val_loss: 0.3682 - val_precision: 0.8846 - val_recall: 0.8070 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 0.0010\n","Epoch 2/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.8210 - auc: 0.8828 - f1_score: 0.8584 - loss: 0.4412 - precision: 0.8287 - recall: 0.8925 - sensitivity: 0.9605 - specificity: 0.9406 - val_accuracy: 0.6566 - val_auc: 0.9660 - val_f1_score: 0.5750 - val_loss: 0.5936 - val_precision: 1.0000 - val_recall: 0.4035 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 3/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.8902 - auc: 0.9588 - f1_score: 0.9047 - loss: 0.2762 - precision: 0.9028 - recall: 0.9092 - sensitivity: 0.9939 - specificity: 0.9817 - val_accuracy: 0.6970 - val_auc: 0.9724 - val_f1_score: 0.6429 - val_loss: 0.5678 - val_precision: 1.0000 - val_recall: 0.4737 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 4/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 631ms/step - accuracy: 0.8880 - auc: 0.9684 - f1_score: 0.8969 - loss: 0.2479 - precision: 0.9204 - recall: 0.8766 - sensitivity: 1.0000 - specificity: 0.9955 - val_accuracy: 0.9091 - val_auc: 0.9716 - val_f1_score: 0.9256 - val_loss: 0.2522 - val_precision: 0.8750 - val_recall: 0.9825 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 5/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 633ms/step - accuracy: 0.8856 - auc: 0.9564 - f1_score: 0.9045 - loss: 0.2667 - precision: 0.8808 - recall: 0.9317 - sensitivity: 0.9895 - specificity: 0.9879 - val_accuracy: 0.9192 - val_auc: 0.9695 - val_f1_score: 0.9333 - val_loss: 0.2287 - val_precision: 0.8889 - val_recall: 0.9825 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 6/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 618ms/step - accuracy: 0.9298 - auc: 0.9659 - f1_score: 0.9421 - loss: 0.2222 - precision: 0.9249 - recall: 0.9607 - sensitivity: 0.9984 - specificity: 0.9933 - val_accuracy: 0.8889 - val_auc: 0.9697 - val_f1_score: 0.9106 - val_loss: 0.2857 - val_precision: 0.8485 - val_recall: 0.9825 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 7/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 616ms/step - accuracy: 0.8301 - auc: 0.9378 - f1_score: 0.8575 - loss: 0.3308 - precision: 0.8322 - recall: 0.8875 - sensitivity: 0.9916 - specificity: 0.9914 - val_accuracy: 0.8990 - val_auc: 0.9735 - val_f1_score: 0.9180 - val_loss: 0.2635 - val_precision: 0.8615 - val_recall: 0.9825 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 8/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 637ms/step - accuracy: 0.7677 - auc: 0.8734 - f1_score: 0.8123 - loss: 0.4984 - precision: 0.7847 - recall: 0.8462 - sensitivity: 0.9389 - specificity: 0.9515 - val_accuracy: 0.8990 - val_auc: 0.9708 - val_f1_score: 0.9153 - val_loss: 0.2257 - val_precision: 0.8852 - val_recall: 0.9474 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 9/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.9481 - auc: 0.9854 - f1_score: 0.9552 - loss: 0.1658 - precision: 0.9436 - recall: 0.9674 - sensitivity: 1.0000 - specificity: 0.9985 - val_accuracy: 0.9091 - val_auc: 0.9680 - val_f1_score: 0.9231 - val_loss: 0.2324 - val_precision: 0.9000 - val_recall: 0.9474 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 10/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 617ms/step - accuracy: 0.8462 - auc: 0.9361 - f1_score: 0.8730 - loss: 0.3731 - precision: 0.8546 - recall: 0.8952 - sensitivity: 0.9779 - specificity: 0.9837 - val_accuracy: 0.9091 - val_auc: 0.9643 - val_f1_score: 0.9231 - val_loss: 0.2448 - val_precision: 0.9000 - val_recall: 0.9474 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 11/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 468ms/step - accuracy: 0.9659 - auc: 0.9918 - f1_score: 0.9717 - loss: 0.1225 - precision: 0.9662 - recall: 0.9773 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 11: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 613ms/step - accuracy: 0.9648 - auc: 0.9913 - f1_score: 0.9706 - loss: 0.1248 - precision: 0.9655 - recall: 0.9760 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8990 - val_auc: 0.9618 - val_f1_score: 0.9180 - val_loss: 0.2856 - val_precision: 0.8615 - val_recall: 0.9825 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 0.0010\n","Epoch 12/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 619ms/step - accuracy: 0.9309 - auc: 0.9809 - f1_score: 0.9418 - loss: 0.2241 - precision: 0.9151 - recall: 0.9732 - sensitivity: 1.0000 - specificity: 0.9929 - val_accuracy: 0.9091 - val_auc: 0.9599 - val_f1_score: 0.9174 - val_loss: 0.2882 - val_precision: 0.9615 - val_recall: 0.8772 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 13/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 608ms/step - accuracy: 0.9924 - auc: 0.9991 - f1_score: 0.9933 - loss: 0.0725 - precision: 0.9877 - recall: 0.9991 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9601 - val_f1_score: 0.8966 - val_loss: 0.2517 - val_precision: 0.8814 - val_recall: 0.9123 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 5.0000e-04\n","Epoch 14/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 471ms/step - accuracy: 0.9426 - auc: 0.9902 - f1_score: 0.9484 - loss: 0.1430 - precision: 0.9489 - recall: 0.9489 - sensitivity: 1.0000 - specificity: 0.9996\n","Epoch 14: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 614ms/step - accuracy: 0.9424 - auc: 0.9901 - f1_score: 0.9482 - loss: 0.1434 - precision: 0.9489 - recall: 0.9485 - sensitivity: 1.0000 - specificity: 0.9995 - val_accuracy: 0.8384 - val_auc: 0.9482 - val_f1_score: 0.8750 - val_loss: 0.4456 - val_precision: 0.7887 - val_recall: 0.9825 - val_sensitivity: 1.0000 - val_specificity: 0.9524 - learning_rate: 5.0000e-04\n","Epoch 15/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 617ms/step - accuracy: 0.9355 - auc: 0.9901 - f1_score: 0.9469 - loss: 0.1847 - precision: 0.9136 - recall: 0.9859 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9591 - val_f1_score: 0.8868 - val_loss: 0.3213 - val_precision: 0.9592 - val_recall: 0.8246 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 2.5000e-04\n","Epoch 16/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 612ms/step - accuracy: 0.9235 - auc: 0.9827 - f1_score: 0.9333 - loss: 0.1876 - precision: 0.9678 - recall: 0.9031 - sensitivity: 0.9980 - specificity: 1.0000 - val_accuracy: 0.8889 - val_auc: 0.9637 - val_f1_score: 0.9060 - val_loss: 0.2552 - val_precision: 0.8833 - val_recall: 0.9298 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 2.5000e-04\n","Epoch 17/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 473ms/step - accuracy: 0.9801 - auc: 0.9975 - f1_score: 0.9829 - loss: 0.0712 - precision: 0.9799 - recall: 0.9861 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 17: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 616ms/step - accuracy: 0.9797 - auc: 0.9975 - f1_score: 0.9826 - loss: 0.0718 - precision: 0.9794 - recall: 0.9860 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8283 - val_auc: 0.9599 - val_f1_score: 0.8317 - val_loss: 0.3820 - val_precision: 0.9545 - val_recall: 0.7368 - val_sensitivity: 0.9825 - val_specificity: 1.0000 - learning_rate: 2.5000e-04\n","Epoch 18/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 614ms/step - accuracy: 0.9742 - auc: 0.9990 - f1_score: 0.9775 - loss: 0.0959 - precision: 0.9991 - recall: 0.9572 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8889 - val_auc: 0.9618 - val_f1_score: 0.9076 - val_loss: 0.2732 - val_precision: 0.8710 - val_recall: 0.9474 - val_sensitivity: 1.0000 - val_specificity: 1.0000 - learning_rate: 1.2500e-04\n","Fold 4 completed with 396 training patients and 99 validation patients.\n","Fold 5/5\n","Epoch 1/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m132s\u001b[0m 1s/step - accuracy: 0.5900 - auc: 0.5705 - f1_score: 0.6576 - loss: 1.9509 - precision: 0.6637 - recall: 0.6540 - sensitivity: 0.6038 - specificity: 0.5873 - val_accuracy: 0.5758 - val_auc: 0.7985 - val_f1_score: 0.7308 - val_loss: 1.7601 - val_precision: 0.5758 - val_recall: 1.0000 - val_sensitivity: 0.9298 - val_specificity: 0.6905 - learning_rate: 0.0010\n","Epoch 2/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 638ms/step - accuracy: 0.6342 - auc: 0.6900 - f1_score: 0.7106 - loss: 1.4000 - precision: 0.6678 - recall: 0.7712 - sensitivity: 0.7069 - specificity: 0.6902 - val_accuracy: 0.8182 - val_auc: 0.8632 - val_f1_score: 0.8525 - val_loss: 0.4541 - val_precision: 0.8000 - val_recall: 0.9123 - val_sensitivity: 0.9649 - val_specificity: 0.8810 - learning_rate: 0.0010\n","Epoch 3/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 623ms/step - accuracy: 0.7802 - auc: 0.9064 - f1_score: 0.8061 - loss: 0.4508 - precision: 0.7445 - recall: 0.9024 - sensitivity: 0.9726 - specificity: 0.9587 - val_accuracy: 0.8182 - val_auc: 0.8935 - val_f1_score: 0.8548 - val_loss: 0.4114 - val_precision: 0.7910 - val_recall: 0.9298 - val_sensitivity: 0.9649 - val_specificity: 0.9286 - learning_rate: 0.0010\n","Epoch 4/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 631ms/step - accuracy: 0.8315 - auc: 0.9013 - f1_score: 0.8569 - loss: 0.4023 - precision: 0.8542 - recall: 0.8610 - sensitivity: 0.9552 - specificity: 0.9535 - val_accuracy: 0.8384 - val_auc: 0.9002 - val_f1_score: 0.8710 - val_loss: 0.4041 - val_precision: 0.8060 - val_recall: 0.9474 - val_sensitivity: 0.9649 - val_specificity: 0.9524 - learning_rate: 0.0010\n","Epoch 5/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 614ms/step - accuracy: 0.8630 - auc: 0.9330 - f1_score: 0.8787 - loss: 0.3214 - precision: 0.8716 - recall: 0.8879 - sensitivity: 0.9960 - specificity: 0.9714 - val_accuracy: 0.7475 - val_auc: 0.9096 - val_f1_score: 0.8175 - val_loss: 0.6440 - val_precision: 0.7000 - val_recall: 0.9825 - val_sensitivity: 0.9649 - val_specificity: 0.9524 - learning_rate: 0.0010\n","Epoch 6/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 603ms/step - accuracy: 0.8341 - auc: 0.9144 - f1_score: 0.8489 - loss: 0.4070 - precision: 0.8280 - recall: 0.8780 - sensitivity: 0.9418 - specificity: 0.9808 - val_accuracy: 0.7980 - val_auc: 0.9217 - val_f1_score: 0.7959 - val_loss: 0.4216 - val_precision: 0.9512 - val_recall: 0.6842 - val_sensitivity: 0.9649 - val_specificity: 0.9524 - learning_rate: 0.0010\n","Epoch 7/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 623ms/step - accuracy: 0.8502 - auc: 0.9327 - f1_score: 0.8633 - loss: 0.3365 - precision: 0.8923 - recall: 0.8422 - sensitivity: 0.9633 - specificity: 0.9793 - val_accuracy: 0.8384 - val_auc: 0.9252 - val_f1_score: 0.8621 - val_loss: 0.3432 - val_precision: 0.8475 - val_recall: 0.8772 - val_sensitivity: 0.9649 - val_specificity: 0.9762 - learning_rate: 0.0010\n","Epoch 8/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 615ms/step - accuracy: 0.9307 - auc: 0.9736 - f1_score: 0.9420 - loss: 0.2113 - precision: 0.9445 - recall: 0.9402 - sensitivity: 0.9877 - specificity: 0.9943 - val_accuracy: 0.8485 - val_auc: 0.9321 - val_f1_score: 0.8649 - val_loss: 0.3435 - val_precision: 0.8889 - val_recall: 0.8421 - val_sensitivity: 0.9649 - val_specificity: 0.9762 - learning_rate: 0.0010\n","Epoch 9/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 629ms/step - accuracy: 0.9043 - auc: 0.9730 - f1_score: 0.9067 - loss: 0.2208 - precision: 0.9053 - recall: 0.9098 - sensitivity: 0.9969 - specificity: 0.9976 - val_accuracy: 0.8586 - val_auc: 0.9290 - val_f1_score: 0.8833 - val_loss: 0.3427 - val_precision: 0.8413 - val_recall: 0.9298 - val_sensitivity: 0.9649 - val_specificity: 0.9524 - learning_rate: 0.0010\n","Epoch 10/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 612ms/step - accuracy: 0.9189 - auc: 0.9757 - f1_score: 0.9294 - loss: 0.2008 - precision: 0.9310 - recall: 0.9286 - sensitivity: 1.0000 - specificity: 0.9922 - val_accuracy: 0.8586 - val_auc: 0.9311 - val_f1_score: 0.8704 - val_loss: 0.3580 - val_precision: 0.9216 - val_recall: 0.8246 - val_sensitivity: 0.9649 - val_specificity: 0.9524 - learning_rate: 0.0010\n","Epoch 11/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.9499 - auc: 0.9824 - f1_score: 0.9571 - loss: 0.1552 - precision: 0.9436 - recall: 0.9715 - sensitivity: 1.0000 - specificity: 0.9866 - val_accuracy: 0.8485 - val_auc: 0.9353 - val_f1_score: 0.8624 - val_loss: 0.3575 - val_precision: 0.9038 - val_recall: 0.8246 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 0.0010\n","Epoch 12/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 477ms/step - accuracy: 0.8918 - auc: 0.9705 - f1_score: 0.9041 - loss: 0.2275 - precision: 0.9258 - recall: 0.8858 - sensitivity: 1.0000 - specificity: 0.9955\n","Epoch 12: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 618ms/step - accuracy: 0.8914 - auc: 0.9702 - f1_score: 0.9039 - loss: 0.2282 - precision: 0.9251 - recall: 0.8858 - sensitivity: 1.0000 - specificity: 0.9955 - val_accuracy: 0.8687 - val_auc: 0.9325 - val_f1_score: 0.8908 - val_loss: 0.3449 - val_precision: 0.8548 - val_recall: 0.9298 - val_sensitivity: 0.9825 - val_specificity: 0.9524 - learning_rate: 0.0010\n","Epoch 13/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 614ms/step - accuracy: 0.9176 - auc: 0.9812 - f1_score: 0.9316 - loss: 0.1810 - precision: 0.9133 - recall: 0.9514 - sensitivity: 0.9998 - specificity: 0.9918 - val_accuracy: 0.8586 - val_auc: 0.9344 - val_f1_score: 0.8814 - val_loss: 0.3436 - val_precision: 0.8525 - val_recall: 0.9123 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 5.0000e-04\n","Epoch 14/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 608ms/step - accuracy: 0.9692 - auc: 0.9975 - f1_score: 0.9677 - loss: 0.1065 - precision: 0.9636 - recall: 0.9738 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.7980 - val_auc: 0.9252 - val_f1_score: 0.8462 - val_loss: 0.5374 - val_precision: 0.7534 - val_recall: 0.9649 - val_sensitivity: 0.9825 - val_specificity: 0.9524 - learning_rate: 5.0000e-04\n","Epoch 15/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 468ms/step - accuracy: 0.9345 - auc: 0.9854 - f1_score: 0.9458 - loss: 0.1543 - precision: 0.9355 - recall: 0.9570 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 15: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.9347 - auc: 0.9855 - f1_score: 0.9459 - loss: 0.1539 - precision: 0.9357 - recall: 0.9571 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8384 - val_auc: 0.9371 - val_f1_score: 0.8462 - val_loss: 0.3998 - val_precision: 0.9362 - val_recall: 0.7719 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 5.0000e-04\n","Epoch 16/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 612ms/step - accuracy: 0.9407 - auc: 0.9948 - f1_score: 0.9473 - loss: 0.1448 - precision: 0.9791 - recall: 0.9210 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8485 - val_auc: 0.9342 - val_f1_score: 0.8780 - val_loss: 0.3755 - val_precision: 0.8182 - val_recall: 0.9474 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 2.5000e-04\n","Epoch 17/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 633ms/step - accuracy: 0.9731 - auc: 0.9979 - f1_score: 0.9767 - loss: 0.0823 - precision: 0.9672 - recall: 0.9866 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9380 - val_f1_score: 0.8829 - val_loss: 0.3302 - val_precision: 0.9074 - val_recall: 0.8596 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 2.5000e-04\n","Epoch 18/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 620ms/step - accuracy: 0.9715 - auc: 0.9941 - f1_score: 0.9754 - loss: 0.1037 - precision: 0.9803 - recall: 0.9708 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8485 - val_auc: 0.9355 - val_f1_score: 0.8718 - val_loss: 0.3449 - val_precision: 0.8500 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 2.5000e-04\n","Epoch 19/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 617ms/step - accuracy: 0.9887 - auc: 0.9997 - f1_score: 0.9909 - loss: 0.0591 - precision: 0.9834 - recall: 0.9986 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8586 - val_auc: 0.9403 - val_f1_score: 0.8727 - val_loss: 0.3426 - val_precision: 0.9057 - val_recall: 0.8421 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 2.5000e-04\n","Epoch 20/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 462ms/step - accuracy: 0.9538 - auc: 0.9929 - f1_score: 0.9593 - loss: 0.1233 - precision: 0.9657 - recall: 0.9534 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 20: ReduceLROnPlateau reducing learning rate to 0.0001250000059371814.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 605ms/step - accuracy: 0.9539 - auc: 0.9929 - f1_score: 0.9594 - loss: 0.1231 - precision: 0.9656 - recall: 0.9537 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8586 - val_auc: 0.9350 - val_f1_score: 0.8814 - val_loss: 0.3492 - val_precision: 0.8525 - val_recall: 0.9123 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 2.5000e-04\n","Epoch 21/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 612ms/step - accuracy: 0.9609 - auc: 0.9956 - f1_score: 0.9668 - loss: 0.1085 - precision: 0.9400 - recall: 0.9957 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9390 - val_f1_score: 0.8870 - val_loss: 0.3326 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.2500e-04\n","Epoch 22/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 620ms/step - accuracy: 0.9403 - auc: 0.9939 - f1_score: 0.9459 - loss: 0.1234 - precision: 0.9653 - recall: 0.9294 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9394 - val_f1_score: 0.8829 - val_loss: 0.3470 - val_precision: 0.9074 - val_recall: 0.8596 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.2500e-04\n","Epoch 23/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 472ms/step - accuracy: 0.9823 - auc: 0.9989 - f1_score: 0.9840 - loss: 0.0609 - precision: 0.9858 - recall: 0.9824 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 23: ReduceLROnPlateau reducing learning rate to 6.25000029685907e-05.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 610ms/step - accuracy: 0.9824 - auc: 0.9989 - f1_score: 0.9841 - loss: 0.0608 - precision: 0.9858 - recall: 0.9825 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9353 - val_f1_score: 0.8870 - val_loss: 0.3449 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.2500e-04\n","Epoch 24/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.9845 - auc: 0.9983 - f1_score: 0.9864 - loss: 0.0711 - precision: 0.9765 - recall: 0.9967 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9363 - val_f1_score: 0.8870 - val_loss: 0.3332 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 6.2500e-05\n","Epoch 25/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 605ms/step - accuracy: 0.9588 - auc: 0.9963 - f1_score: 0.9604 - loss: 0.1073 - precision: 0.9332 - recall: 0.9923 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9355 - val_f1_score: 0.8870 - val_loss: 0.3388 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 6.2500e-05\n","Epoch 26/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 469ms/step - accuracy: 0.9736 - auc: 0.9971 - f1_score: 0.9749 - loss: 0.1027 - precision: 0.9637 - recall: 0.9879 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 26: ReduceLROnPlateau reducing learning rate to 3.125000148429535e-05.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 610ms/step - accuracy: 0.9738 - auc: 0.9971 - f1_score: 0.9750 - loss: 0.1021 - precision: 0.9640 - recall: 0.9880 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9409 - val_f1_score: 0.8947 - val_loss: 0.3304 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 6.2500e-05\n","Epoch 27/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 626ms/step - accuracy: 0.9849 - auc: 0.9996 - f1_score: 0.9867 - loss: 0.0549 - precision: 0.9997 - recall: 0.9740 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9371 - val_f1_score: 0.8870 - val_loss: 0.3301 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 28/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 628ms/step - accuracy: 0.9892 - auc: 0.9996 - f1_score: 0.9902 - loss: 0.0535 - precision: 0.9863 - recall: 0.9943 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9413 - val_f1_score: 0.8947 - val_loss: 0.3299 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 29/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 605ms/step - accuracy: 0.9511 - auc: 0.9947 - f1_score: 0.9573 - loss: 0.1064 - precision: 0.9425 - recall: 0.9728 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9417 - val_f1_score: 0.8947 - val_loss: 0.3318 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 30/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 618ms/step - accuracy: 0.9871 - auc: 0.9996 - f1_score: 0.9894 - loss: 0.0507 - precision: 0.9945 - recall: 0.9843 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9417 - val_f1_score: 0.8947 - val_loss: 0.3299 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 31/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 625ms/step - accuracy: 0.9627 - auc: 0.9954 - f1_score: 0.9683 - loss: 0.0885 - precision: 0.9687 - recall: 0.9681 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9419 - val_f1_score: 0.8947 - val_loss: 0.3291 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 32/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 641ms/step - accuracy: 0.9717 - auc: 0.9967 - f1_score: 0.9757 - loss: 0.0863 - precision: 0.9735 - recall: 0.9781 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9424 - val_f1_score: 0.8947 - val_loss: 0.3289 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 33/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 608ms/step - accuracy: 0.9507 - auc: 0.9966 - f1_score: 0.9501 - loss: 0.1111 - precision: 0.9290 - recall: 0.9749 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9378 - val_f1_score: 0.8870 - val_loss: 0.3375 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 34/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 609ms/step - accuracy: 0.9398 - auc: 0.9962 - f1_score: 0.9460 - loss: 0.1142 - precision: 0.9182 - recall: 0.9787 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9419 - val_f1_score: 0.8929 - val_loss: 0.3346 - val_precision: 0.9091 - val_recall: 0.8772 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 35/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 480ms/step - accuracy: 0.9846 - auc: 0.9992 - f1_score: 0.9872 - loss: 0.0656 - precision: 0.9907 - recall: 0.9837 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 35: ReduceLROnPlateau reducing learning rate to 1.5625000742147677e-05.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 622ms/step - accuracy: 0.9845 - auc: 0.9992 - f1_score: 0.9871 - loss: 0.0658 - precision: 0.9906 - recall: 0.9837 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9432 - val_f1_score: 0.8947 - val_loss: 0.3299 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.1250e-05\n","Epoch 36/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 631ms/step - accuracy: 0.9825 - auc: 0.9986 - f1_score: 0.9845 - loss: 0.0638 - precision: 0.9813 - recall: 0.9878 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9430 - val_f1_score: 0.8947 - val_loss: 0.3286 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.5625e-05\n","Epoch 37/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 618ms/step - accuracy: 0.9947 - auc: 0.9998 - f1_score: 0.9956 - loss: 0.0409 - precision: 0.9912 - recall: 1.0000 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9432 - val_f1_score: 0.8947 - val_loss: 0.3287 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.5625e-05\n","Epoch 38/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 614ms/step - accuracy: 0.9551 - auc: 0.9949 - f1_score: 0.9557 - loss: 0.1222 - precision: 0.9433 - recall: 0.9713 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9384 - val_f1_score: 0.8870 - val_loss: 0.3296 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.5625e-05\n","Epoch 39/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m32s\u001b[0m 630ms/step - accuracy: 0.9852 - auc: 0.9982 - f1_score: 0.9875 - loss: 0.0704 - precision: 0.9800 - recall: 0.9952 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9428 - val_f1_score: 0.8947 - val_loss: 0.3282 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.5625e-05\n","Epoch 40/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 613ms/step - accuracy: 0.9944 - auc: 0.9998 - f1_score: 0.9953 - loss: 0.0434 - precision: 0.9960 - recall: 0.9945 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8687 - val_auc: 0.9386 - val_f1_score: 0.8870 - val_loss: 0.3286 - val_precision: 0.8793 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.5625e-05\n","Epoch 41/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 613ms/step - accuracy: 0.9894 - auc: 0.9996 - f1_score: 0.9909 - loss: 0.0583 - precision: 0.9842 - recall: 0.9977 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9432 - val_f1_score: 0.8947 - val_loss: 0.3300 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.5625e-05\n","Epoch 42/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 476ms/step - accuracy: 0.9912 - auc: 0.9997 - f1_score: 0.9923 - loss: 0.0505 - precision: 0.9887 - recall: 0.9960 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 42: ReduceLROnPlateau reducing learning rate to 7.812500371073838e-06.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 617ms/step - accuracy: 0.9910 - auc: 0.9996 - f1_score: 0.9921 - loss: 0.0508 - precision: 0.9886 - recall: 0.9958 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9434 - val_f1_score: 0.8947 - val_loss: 0.3283 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.5625e-05\n","Epoch 43/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 607ms/step - accuracy: 0.9776 - auc: 0.9977 - f1_score: 0.9802 - loss: 0.0734 - precision: 0.9649 - recall: 0.9963 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8889 - val_auc: 0.9432 - val_f1_score: 0.9027 - val_loss: 0.3300 - val_precision: 0.9107 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 7.8125e-06\n","Epoch 44/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 610ms/step - accuracy: 0.9918 - auc: 0.9994 - f1_score: 0.9927 - loss: 0.0597 - precision: 0.9899 - recall: 0.9955 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9432 - val_f1_score: 0.8947 - val_loss: 0.3290 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 7.8125e-06\n","Epoch 45/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 472ms/step - accuracy: 0.9778 - auc: 0.9990 - f1_score: 0.9820 - loss: 0.0771 - precision: 0.9925 - recall: 0.9721 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 45: ReduceLROnPlateau reducing learning rate to 3.906250185536919e-06.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 615ms/step - accuracy: 0.9778 - auc: 0.9990 - f1_score: 0.9820 - loss: 0.0771 - precision: 0.9922 - recall: 0.9723 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9430 - val_f1_score: 0.8947 - val_loss: 0.3287 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 7.8125e-06\n","Epoch 46/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 607ms/step - accuracy: 0.9978 - auc: 0.9999 - f1_score: 0.9980 - loss: 0.0465 - precision: 0.9968 - recall: 0.9992 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8889 - val_auc: 0.9432 - val_f1_score: 0.9027 - val_loss: 0.3300 - val_precision: 0.9107 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.9063e-06\n","Epoch 47/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 612ms/step - accuracy: 0.9424 - auc: 0.9908 - f1_score: 0.9521 - loss: 0.1251 - precision: 0.9398 - recall: 0.9658 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9432 - val_f1_score: 0.8947 - val_loss: 0.3291 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.9063e-06\n","Epoch 48/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 463ms/step - accuracy: 0.9903 - auc: 0.9996 - f1_score: 0.9911 - loss: 0.0712 - precision: 0.9872 - recall: 0.9951 - sensitivity: 1.0000 - specificity: 1.0000\n","Epoch 48: ReduceLROnPlateau reducing learning rate to 1.9531250927684596e-06.\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 605ms/step - accuracy: 0.9902 - auc: 0.9996 - f1_score: 0.9911 - loss: 0.0710 - precision: 0.9873 - recall: 0.9949 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9432 - val_f1_score: 0.8947 - val_loss: 0.3290 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 3.9063e-06\n","Epoch 49/50\n","\u001b[1m44/44\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m31s\u001b[0m 611ms/step - accuracy: 0.9857 - auc: 0.9987 - f1_score: 0.9874 - loss: 0.0688 - precision: 0.9760 - recall: 0.9992 - sensitivity: 1.0000 - specificity: 1.0000 - val_accuracy: 0.8788 - val_auc: 0.9432 - val_f1_score: 0.8947 - val_loss: 0.3291 - val_precision: 0.8947 - val_recall: 0.8947 - val_sensitivity: 0.9825 - val_specificity: 0.9762 - learning_rate: 1.9531e-06\n","Fold 5 completed with 396 training patients and 99 validation patients.\n","Training complete.\n"]}],"source":["# Training loop with cross-validation\n","histories = []\n","for fold_number in range(num_folds):\n","    print(f\"Fold {fold_number + 1}/{num_folds}\")\n","\n","    tf.keras.backend.clear_session()\n","    current_train_patients = train_patient_ids_list[fold_number]\n","    current_val_patients = val_patient_ids_list[fold_number]\n","\n","    # Create instances of DataGenerator\n","    train_generator = DataGenerator(current_train_patients, patient_image_mapping, label_mapping, patients_per_batch, num_classes)\n","    val_generator = DataGenerator(current_val_patients, patient_image_mapping, label_mapping, patients_per_batch, num_classes)\n","\n","    # Create the multi-input DenseNet model\n","    model = create_multi_input_densenet_model(num_classes, num_top_layers_to_train)\n","\n","    # Compile the model\n","    model.compile(optimizer='adam',\n","                  loss='binary_crossentropy',\n","                  metrics=['accuracy',\n","                           Precision(name='precision'),\n","                           Recall(name='recall'),\n","                           AUC(name='auc'),\n","                           SensitivityAtSpecificity(0.5, name='sensitivity'),\n","                           SpecificityAtSensitivity(0.5, name='specificity'),\n","                           F1Score(name='f1_score')])\n","\n","    # Callbacks - early stopping and dynamic learning rate\n","    callbacks = [\n","        tf.keras.callbacks.ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=3, verbose=1),\n","        tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True)\n","    ]\n","    #early_stopping = EarlyStopping(monitor='val_loss', patience=10, restore_best_weights=True)\n","\n","    # Train the model\n","    history = model.fit(\n","        train_generator,\n","        validation_data=val_generator,\n","        epochs=50,\n","        callbacks=callbacks,\n","        verbose=1)\n","\n","    # Record training history\n","    histories.append(history)\n","    accuracy_train_list.append(history.history['accuracy'])\n","    precision_train_list.append(history.history['precision'])\n","    recall_train_list.append(history.history['recall'])\n","    auc_train_list.append(history.history['auc'])\n","    sensitivity_train_list.append(history.history['sensitivity'])\n","    specificity_train_list.append(history.history['specificity'])\n","    f1_score_train_list.append(history.history['f1_score'])\n","\n","    accuracy_val_list.append(history.history['val_accuracy'])\n","    precision_val_list.append(history.history['val_precision'])\n","    recall_val_list.append(history.history['val_recall'])\n","    auc_val_list.append(history.history['val_auc'])\n","    sensitivity_val_list.append(history.history['val_sensitivity'])\n","    specificity_val_list.append(history.history['val_specificity'])\n","    f1_score_val_list.append(history.history['val_f1_score'])\n","\n","    print(f\"Fold {fold_number + 1} completed with {len(current_train_patients)} training patients and {len(current_val_patients)} validation patients.\")\n","# Calculate epochs array based on the longest training history recorded\n","if accuracy_train_list:\n","    max_length = max([len(arr) for arr in accuracy_train_list])\n","    epochs = np.arange(1, max_length + 1)\n","else:\n","    epochs = np.array([])\n","\n","print(\"Training complete.\")"]},{"cell_type":"markdown","source":["#Save Model and predict"],"metadata":{"id":"jZees5MIdQkz"}},{"cell_type":"code","source":["#model_save_path = os.path.join(cwd, 'Images', 'All_GS_Images')\n","\n","#cwd = os.getcwd()\n","#save_path = os.path.join(cwd, 'Collab Notebooks', 'Saved Models')\n","\n","# 10. Save the Model\n","model.save('/content/drive/My Drive/BCM/Deveza_Lab_Shared/AI-ML Research Projects/AI-Fracture_Projects/AI-DRF/Collab Notebooks/Saved Models/DN169_3View.keras')\n","\n","# Save the model in HDF5 format\n","#model.save('multi_input_densenet_model.h5')\n","\n","# Alternatively, save in TensorFlow SavedModel format\n","#model.save('multi_input_densenet_model')  # This creates a directory. (multi_input_densenet_model.keras)\n"],"metadata":{"id":"ARFNlMEleDVF","executionInfo":{"status":"ok","timestamp":1737311525729,"user_tz":360,"elapsed":4640,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["def predict_on_test_set(model, test_patient_ids, patient_image_mapping):\n","    predictions = []\n","    true_labels = []\n","\n","    for patient_id in test_patient_ids:\n","        view_images = patient_image_mapping[patient_id]\n","        inputs = {view: preprocess_image(view_images[view]) for view in desired_views}\n","\n","        # Add batch dimension\n","        inputs = {key: np.expand_dims(val, axis=0) for key, val in inputs.items()}\n","\n","        # Model prediction\n","        preds = model.predict(inputs)\n","        predictions.append(preds[0][0])  # Assuming binary classification\n","        true_labels.append(label_mapping[patient_id])  # Get the true label\n","\n","    return np.array(predictions), np.array(true_labels)\n"],"metadata":{"id":"vl1eusYHdPMV","executionInfo":{"status":"ok","timestamp":1737311527780,"user_tz":360,"elapsed":97,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["#AUC-ROC Curve\n","from sklearn.metrics import roc_curve, roc_auc_score\n","\n","def plot_roc_curve(y_true, y_pred):\n","    fpr, tpr, _ = roc_curve(y_true, y_pred)\n","    auc = roc_auc_score(y_true, y_pred)\n","    plt.figure()\n","    plt.plot(fpr, tpr, label=f'ROC Curve (AUC = {auc:.2f})')\n","    plt.plot([0, 1], [0, 1], 'k--')\n","    plt.xlabel('False Positive Rate')\n","    plt.ylabel('True Positive Rate')\n","    plt.title('Receiver Operating Characteristic')\n","    plt.legend(loc='lower right')\n","    plt.show()\n"],"metadata":{"id":"6w29N4otdgA1","executionInfo":{"status":"ok","timestamp":1737311530456,"user_tz":360,"elapsed":126,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"execution_count":19,"outputs":[]},{"cell_type":"code","source":["#Confusion Matrix\n","from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay\n","\n","def plot_confusion_matrix(y_true, y_pred):\n","    cm = confusion_matrix(y_true, y_pred.round())  # Binary predictions\n","    disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=['Class 0', 'Class 1'])\n","    disp.plot(cmap=plt.cm.Blues)\n","    plt.title('Confusion Matrix')\n","    plt.show()\n"],"metadata":{"id":"3K1FS8IVds7f","executionInfo":{"status":"ok","timestamp":1737311531787,"user_tz":360,"elapsed":124,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["#Precision-Recall Curve\n","from sklearn.metrics import precision_recall_curve, average_precision_score\n","\n","def plot_precision_recall_curve(y_true, y_pred):\n","    precision, recall, _ = precision_recall_curve(y_true, y_pred)\n","    ap_score = average_precision_score(y_true, y_pred)\n","    plt.figure()\n","    plt.plot(recall, precision, label=f'PR Curve (AP = {ap_score:.2f})')\n","    plt.xlabel('Recall')\n","    plt.ylabel('Precision')\n","    plt.title('Precision-Recall Curve')\n","    plt.legend(loc='lower left')\n","    plt.show()\n"],"metadata":{"id":"RH_m_vJOdibu","executionInfo":{"status":"ok","timestamp":1737311532815,"user_tz":360,"elapsed":152,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"execution_count":21,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","import numpy as np\n","\n","# Remove random_state or set it to None for a different split each time\n","train_val_patient_ids, test_patient_ids, train_val_labels, test_labels = train_test_split(\n","    unique_patient_ids,  # List of all patient IDs\n","    patient_labels,      # Corresponding labels for stratification\n","    test_size=0.2,       # 20% of patients reserved for testing\n","    random_state=None,   # Set to None for different random splits each time\n","    stratify=patient_labels  # Ensure the same class distribution\n",")\n","\n","# Print the number of patients in each split\n","print(f\"Number of patients in training/validation set: {len(train_val_patient_ids)}\")\n","print(f\"Number of patients in test set: {len(test_patient_ids)}\")\n","\n","# Optional: Check class distributions\n","from collections import Counter\n","print(\"\\nClass distribution in training/validation set:\", Counter(train_val_labels))\n","print(\"Class distribution in test set:\", Counter(test_labels))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HUEt-0__3GkA","executionInfo":{"status":"ok","timestamp":1737312117963,"user_tz":360,"elapsed":130,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}},"outputId":"ef9f0f80-f1ce-410d-cee2-93c886f16934"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Number of patients in training/validation set: 396\n","Number of patients in test set: 99\n","\n","Class distribution in training/validation set: Counter({1: 229, 0: 167})\n","Class distribution in test set: Counter({1: 57, 0: 42})\n"]}]},{"cell_type":"code","source":["def predict_on_test_set(model, test_patient_ids, patient_image_mapping):\n","    predictions = []\n","    true_labels = []\n","\n","    for patient_id in test_patient_ids:\n","        view_images = patient_image_mapping[patient_id]\n","        # Correctly match input names to the model's expected input names\n","        inputs = {\n","            'input_ap': preprocess_image(view_images['ap']),\n","            'input_lat': preprocess_image(view_images['lat']),\n","            'input_ob': preprocess_image(view_images['ob']),\n","        }\n","\n","        # Add batch dimension\n","        inputs = {key: np.expand_dims(val, axis=0) for key, val in inputs.items()}\n","\n","        # Model prediction\n","        preds = model.predict(inputs)\n","        predictions.append(preds[0][0])  # Assuming binary classification\n","        true_labels.append(label_mapping[patient_id])  # Get the true label\n","\n","    return np.array(predictions), np.array(true_labels)\n"],"metadata":{"id":"Ba2TdfPi2Z4b","executionInfo":{"status":"ok","timestamp":1737312078622,"user_tz":360,"elapsed":99,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["predictions, true_labels = predict_on_test_set(model, test_patient_ids, patient_image_mapping)\n","\n","# Plot metrics\n","plot_roc_curve(true_labels, predictions)\n","plot_confusion_matrix(true_labels, predictions)\n","plot_precision_recall_curve(true_labels, predictions)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"d-tZaa-ydyJD","executionInfo":{"status":"ok","timestamp":1737312140321,"user_tz":360,"elapsed":19193,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}},"outputId":"3e2e579e-ff10-448a-be43-c7a7232e2f22"},"execution_count":48,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 81ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 80ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 93ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 72ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 79ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 81ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 79ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 78ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 80ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 79ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 79ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 80ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 80ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 79ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 80ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 78ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 75ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n","\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAjcAAAHHCAYAAABDUnkqAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAARKlJREFUeJzt3Xd4VGX+/vF7UmbSC4SEYqQXRQQMwg8REQyGIiuuuyIgBFYRKSsSlQVFsKzEgggqTZe2+0VBERUFQYygIihKW0U6CCyQAAoJpCfz/P4IGYlJgIQkkxzer+uaK3Oe85xzPueBMDenjc0YYwQAAGARHu4uAAAAoCwRbgAAgKUQbgAAgKUQbgAAgKUQbgAAgKUQbgAAgKUQbgAAgKUQbgAAgKUQbgAAgKUQboAr0KBBg1SvXr0SLbN27VrZbDatXbu2XGqq6m699VbdeuutrulffvlFNptN8+fPd1tNwJWKcANUgPnz58tms7lePj4+atKkiUaOHKmkpCR3l1fp5QeF/JeHh4eqVaum7t27a8OGDe4ur0wkJSXpscceU7NmzeTn5yd/f39FRUXpn//8p06fPu3u8oAqxcvdBQBXkmeffVb169dXRkaG1q1bp5kzZ2rFihX66aef5OfnV2F1vPXWW3I6nSVa5pZbblF6errsdns5VXVxffv2VY8ePZSbm6vdu3drxowZ6ty5s77//nu1aNHCbXVdru+//149evTQ2bNndd999ykqKkqS9MMPP+iFF17QV199pc8++8zNVQJVB+EGqEDdu3dXmzZtJEkPPPCAqlevrilTpuijjz5S3759i1wmNTVV/v7+ZVqHt7d3iZfx8PCQj49PmdZRUjfccIPuu+8+13THjh3VvXt3zZw5UzNmzHBjZaV3+vRp3XXXXfL09NSWLVvUrFmzAvOff/55vfXWW2WyrfL4uwRURpyWAtyoS5cukqQDBw5IyrsWJiAgQPv27VOPHj0UGBio/v37S5KcTqemTp2q5s2by8fHRxERERo6dKhOnTpVaL2ffvqpOnXqpMDAQAUFBenGG2/U22+/7Zpf1DU3ixYtUlRUlGuZFi1aaNq0aa75xV1z89577ykqKkq+vr4KCwvTfffdpyNHjhTok79fR44cUe/evRUQEKAaNWroscceU25ubqnHr2PHjpKkffv2FWg/ffq0HnnkEUVGRsrhcKhRo0Z68cUXCx2tcjqdmjZtmlq0aCEfHx/VqFFD3bp10w8//ODqM2/ePHXp0kXh4eFyOBy69tprNXPmzFLX/EezZ8/WkSNHNGXKlELBRpIiIiI0fvx417TNZtPTTz9dqF+9evU0aNAg13T+qdAvv/xSw4cPV3h4uK666iotWbLE1V5ULTabTT/99JOrbefOnfrLX/6iatWqycfHR23atNGyZcsub6eBcsaRG8CN8j+Uq1ev7mrLyclRTEyMbr75Zk2ePNl1umro0KGaP3++Bg8erIcfflgHDhzQG2+8oS1btuibb75xHY2ZP3++/va3v6l58+YaN26cQkJCtGXLFq1cuVL9+vUrso7Vq1erb9++uu222/Tiiy9Kknbs2KFvvvlGo0aNKrb+/HpuvPFGxcfHKykpSdOmTdM333yjLVu2KCQkxNU3NzdXMTExateunSZPnqzPP/9cr7zyiho2bKhhw4aVavx++eUXSVJoaKirLS0tTZ06ddKRI0c0dOhQXX311Vq/fr3GjRunY8eOaerUqa6+999/v+bPn6/u3bvrgQceUE5Ojr7++mt9++23riNsM2fOVPPmzfWnP/1JXl5e+vjjjzV8+HA5nU6NGDGiVHWfb9myZfL19dVf/vKXy15XUYYPH64aNWpowoQJSk1NVc+ePRUQEKB3331XnTp1KtB38eLFat68ua677jpJ0vbt29WhQwfVqVNHY8eOlb+/v95991317t1b77//vu66665yqRm4bAZAuZs3b56RZD7//HNz4sQJc/jwYbNo0SJTvXp14+vra/73v/8ZY4yJjY01kszYsWMLLP/1118bSWbhwoUF2leuXFmg/fTp0yYwMNC0a9fOpKenF+jrdDpd72NjY03dunVd06NGjTJBQUEmJyen2H1Ys2aNkWTWrFljjDEmKyvLhIeHm+uuu67Atj755BMjyUyYMKHA9iSZZ599tsA6W7dubaKioordZr4DBw4YSeaZZ54xJ06cMImJiebrr782N954o5Fk3nvvPVff5557zvj7+5vdu3cXWMfYsWONp6enOXTokDHGmC+++MJIMg8//HCh7Z0/VmlpaYXmx8TEmAYNGhRo69Spk+nUqVOhmufNm3fBfQsNDTUtW7a8YJ/zSTITJ04s1F63bl0TGxvrms7/O3fzzTcX+nPt27evCQ8PL9B+7Ngx4+HhUeDP6LbbbjMtWrQwGRkZrjan02luuukm07hx40uuGahonJYCKlB0dLRq1KihyMhI3XvvvQoICNAHH3ygOnXqFOj3xyMZ7733noKDg9W1a1edPHnS9YqKilJAQIDWrFkjKe8IzJkzZzR27NhC18fYbLZi6woJCVFqaqpWr159yfvyww8/6Pjx4xo+fHiBbfXs2VPNmjXT8uXLCy3z0EMPFZju2LGj9u/ff8nbnDhxomrUqKGaNWuqY8eO2rFjh1555ZUCRz3ee+89dezYUaGhoQXGKjo6Wrm5ufrqq68kSe+//75sNpsmTpxYaDvnj5Wvr6/rfXJysk6ePKlOnTpp//79Sk5OvuTai5OSkqLAwMDLXk9xhgwZIk9PzwJtffr00fHjxwucYlyyZImcTqf69OkjSfrtt9/0xRdf6J577tGZM2dc4/jrr78qJiZGe/bsKXT6EagsOC0FVKDp06erSZMm8vLyUkREhJo2bSoPj4L/x/Dy8tJVV11VoG3Pnj1KTk5WeHh4kes9fvy4pN9Pc+WfVrhUw4cP17vvvqvu3burTp06uv3223XPPfeoW7duxS5z8OBBSVLTpk0LzWvWrJnWrVtXoC3/mpbzhYaGFrhm6MSJEwWuwQkICFBAQIBr+sEHH9Rf//pXZWRk6IsvvtBrr71W6JqdPXv26L///W+hbeU7f6xq166tatWqFbuPkvTNN99o4sSJ2rBhg9LS0grMS05OVnBw8AWXv5igoCCdOXPmstZxIfXr1y/U1q1bNwUHB2vx4sW67bbbJOWdkmrVqpWaNGkiSdq7d6+MMXrqqaf01FNPFbnu48ePFwrmQGVAuAEqUNu2bV3XchTH4XAUCjxOp1Ph4eFauHBhkcsU90F+qcLDw7V161atWrVKn376qT799FPNmzdPAwcO1IIFCy5r3fn+ePSgKDfeeKMrNEl5R2rOv3i2cePGio6OliTdcccd8vT01NixY9W5c2fXuDqdTnXt2lVjxowpchv5H96XYt++fbrtttvUrFkzTZkyRZGRkbLb7VqxYoVeffXVEt9OX5RmzZpp69atysrKuqzb7Iu7MPv8I0/5HA6HevfurQ8++EAzZsxQUlKSvvnmG02aNMnVJ3/fHnvsMcXExBS57kaNGpW6XqA8EW6AKqBhw4b6/PPP1aFDhyI/rM7vJ0k//fRTiT947Ha7evXqpV69esnpdGr48OGaPXu2nnrqqSLXVbduXUnSrl27XHd95du1a5drfkksXLhQ6enprukGDRpcsP+TTz6pt956S+PHj9fKlSsl5Y3B2bNnXSGoOA0bNtSqVav022+/FXv05uOPP1ZmZqaWLVumq6++2tWefxqwLPTq1UsbNmzQ+++/X+zjAM4XGhpa6KF+WVlZOnbsWIm226dPHy1YsEAJCQnasWOHjDGuU1LS72Pv7e190bEEKhuuuQGqgHvuuUe5ubl67rnnCs3LyclxfdjdfvvtCgwMVHx8vDIyMgr0M8YUu/5ff/21wLSHh4euv/56SVJmZmaRy7Rp00bh4eGaNWtWgT6ffvqpduzYoZ49e17Svp2vQ4cOio6Odr0uFm5CQkI0dOhQrVq1Slu3bpWUN1YbNmzQqlWrCvU/ffq0cnJyJEl33323jDF65plnCvXLH6v8o03nj11ycrLmzZtX4n0rzkMPPaRatWrp0Ucf1e7duwvNP378uP75z3+6phs2bOi6bijfm2++WeJb6qOjo1WtWjUtXrxYixcvVtu2bQucwgoPD9ett96q2bNnFxmcTpw4UaLtARWJIzdAFdCpUycNHTpU8fHx2rp1q26//XZ5e3trz549eu+99zRt2jT95S9/UVBQkF599VU98MADuvHGG9WvXz+FhoZq27ZtSktLK/YU0wMPPKDffvtNXbp00VVXXaWDBw/q9ddfV6tWrXTNNdcUuYy3t7defPFFDR48WJ06dVLfvn1dt4LXq1dPo0ePLs8hcRk1apSmTp2qF154QYsWLdLjjz+uZcuW6Y477tCgQYMUFRWl1NRU/fjjj1qyZIl++eUXhYWFqXPnzhowYIBee+017dmzR926dZPT6dTXX3+tzp07a+TIkbr99ttdR7SGDh2qs2fP6q233lJ4eHiJj5QUJzQ0VB988IF69OihVq1aFXhC8ebNm/XOO++offv2rv4PPPCAHnroId19993q2rWrtm3bplWrViksLKxE2/X29taf//xnLVq0SKmpqZo8eXKhPtOnT9fNN9+sFi1aaMiQIWrQoIGSkpK0YcMG/e9//9O2bdsub+eB8uLOW7WAK0X+bbnff//9BfvFxsYaf3//Yue/+eabJioqyvj6+prAwEDTokULM2bMGHP06NEC/ZYtW2Zuuukm4+vra4KCgkzbtm3NO++8U2A7598KvmTJEnP77beb8PBwY7fbzdVXX22GDh1qjh075urzx1vB8y1evNi0bt3aOBwOU61aNdO/f3/Xre0X26+JEyeaS/lnKP+26pdffrnI+YMGDTKenp5m7969xhhjzpw5Y8aNG2caNWpk7Ha7CQsLMzfddJOZPHmyycrKci2Xk5NjXn75ZdOsWTNjt9tNjRo1TPfu3c2mTZsKjOX1119vfHx8TL169cyLL75o5s6daySZAwcOuPqV9lbwfEePHjWjR482TZo0MT4+PsbPz89ERUWZ559/3iQnJ7v65ebmmn/84x8mLCzM+Pn5mZiYGLN3795ibwW/0N+51atXG0nGZrOZw4cPF9ln3759ZuDAgaZmzZrG29vb1KlTx9xxxx1myZIll7RfgDvYjLnAsWoAAIAqhmtuAACApRBuAACApRBuAACApRBuAACApRBuAACApRBuAACApVxxD/FzOp06evSoAgMDL/gtyQAAoPIwxujMmTOqXbt2oe/f+6MrLtwcPXpUkZGR7i4DAACUwuHDh3XVVVddsM8VF24CAwMl5Q1OUFCQm6sBAACXIiUlRZGRka7P8Qu54sJN/qmooKAgwg0AAFXMpVxSwgXFAADAUgg3AADAUgg3AADAUgg3AADAUgg3AADAUgg3AADAUgg3AADAUgg3AADAUgg3AADAUgg3AADAUtwabr766iv16tVLtWvXls1m04cffnjRZdauXasbbrhBDodDjRo10vz588u9TgAAUHW4NdykpqaqZcuWmj59+iX1P3DggHr27KnOnTtr69ateuSRR/TAAw9o1apV5VwpAACoKtz6xZndu3dX9+7dL7n/rFmzVL9+fb3yyiuSpGuuuUbr1q3Tq6++qpiYmPIq85Jk5uTqxJlMt9YAXImCfL0V5OPt7jIAVCJV6lvBN2zYoOjo6AJtMTExeuSRR4pdJjMzU5mZv4eOlJSUcqlt+9EU/XnG+nJZN4Di2b089MHwm9S8drC7SwFQSVSpcJOYmKiIiIgCbREREUpJSVF6erp8fX0LLRMfH69nnnmm3GuzSXJ4cX02UJGycp3KynFqV+IZwg0AlyoVbkpj3LhxiouLc02npKQoMjKyzLfT+upQ7frnpZ9iA3D5Bs7dqK92n3B3GQAqmSoVbmrWrKmkpKQCbUlJSQoKCiryqI0kORwOORyOiigPAABUAlXqPEr79u2VkJBQoG316tVq3769myoCAACVjVvDzdmzZ7V161Zt3bpVUt6t3lu3btWhQ4ck5Z1SGjhwoKv/Qw89pP3792vMmDHauXOnZsyYoXfffVejR492R/kAAKAScmu4+eGHH9S6dWu1bt1akhQXF6fWrVtrwoQJkqRjx465go4k1a9fX8uXL9fq1avVsmVLvfLKK/rXv/7l9tvAAQBA5eHWa25uvfVWGWOKnV/U04dvvfVWbdmypRyrAgAAVVmVuuYGAADgYgg3AADAUgg3AADAUgg3AADAUgg3AADAUqrUE4oBAED5M8YoK9epzBynMrOdyszJdb3PznWqWa1AObw83V1msQg3AABUYrlOo4zs3LxXjlPpWXnvM3NylZHtPDfv3M/z2vLCSN7P/OXz32fmOP/wPm+5zPPmXcgtTWro339rW0EjUHKEGwAASsHpNMrIyVV6Vq7Sswv+TMvOVUb+9Lm2DNd7p9LPhY30rFzXOjJynK5l8vtmZjuVlXvhoFHebDbJ4eUhh5enbDbpdFq2fjmZ6taaLoZwAwCwLGOMMnOcSsvKVVpWjtKycpWamXNu+ve2tKxcpWXmKC373M9zASX9XJ90V/+80JGWlaOM7IoPHXYvD/l4ecjH21O+dk/5eHnK4e3x+09vz7yXV/77vFBS4Ke3pxzn5ueHlvz5Dm+PQvO8PW2y2WySpM2HTunPM9ZX+H6XFOEGAFBpGGOUnp2rsxk5OpuZo9TM3HM/c5Saldd2NiNHqa6QkqOzmXmBJDUrr39qVo7S8n9m5SrXWfyT8MuKw8tDvnZP+Xl7ysfuKV9vT/nZ84KG77kg4nsueOS/9z0XPs4PKr7nlnG1e5837eUpDw9bue+LFRBuAACXzek0Ss3K0ZmM/Fe2zpwLImcycnQ2Mzvv/bm2s5l5rzMZecElfzo1M0fllUV8vD3kb/fKCyF2T/nZveTv8JSvt9e56bw2P7vneX085Wv3kp+353ntv/fJDymEjsqFcAMAUE6uUykZOUpJz1ZyerZSMrKVkp5z7me2zmQU9f68EJOZowt8VWCJedgkf4eXAhxe8j/3CnB4yt+eP+2Z12b3kp/DS/52z9/b7V6u4OLv8HKFFk8CyBWDcAMAFuF0Gp3JyNHp9CydTsvW6fRsnU7LUkp6tk6n5YWW5PS89uT0vKCSH2ZSs3LLpAZvT5sCfbwV4PBSoE/eK8Dhfe6nlwLO/Qzy8XKFl/y289/7enu6rvMASopwAwCVUEZ2rk6lZem31LygciotS6fSsnUqNUun0n5vyw8tp9KylJyefdlHT/KDR5Cvt4J8vBXk63Xup7eCfLwUeF5boM+50HIuxAT5eMvh5UEogdsRbgCgnBljlJqVq1/PZurk2bzA8uvZTP2amvf+VGqWfj0XWn4715Z2GUdS/OyeCvWzK8jXWyG+3gr29VaIX97PoPPe57+CfPJ+Bvp4ycuTB9ej6iPcAEApOJ1Gp9KydPJslk6ezdTJs5k6cSazwPSvZ/NCzMnULGVd5KFoRfHysCnEz65QP2+F+tkV6p/38/y2ED9v13TwudBSmZ8cC1QEwg0AnCcrx6kTZzOVlJKh4ykZOn4mL7ScOJNZ4P3Js5nKKeFtPb7enqoeYFd1f7uqBzhUzT/vfai/XdX87armZ1e1gLyfof52Bfl4cYoHKAXCDYArgjFGv6VmKTElQ4nJGb//TM4LMEnngsxvqVklWm+on7fCAhx5r0CHwgLs56btrvZq/nZVD7DLz84/uUBF4DcNQJVnjHQ6LUtHTqfr2OkMHU1O19HTGTp6Ol2JyRk6lpKupJTMSz41ZPf0UHiQQ+GBDoUH+ig8yKEaAQ7VCMx7hQf6qEagQ9UD7PLmGhWg0iHcAKjyxrz/30t+Cm1YgF0RQT6qFeyjmsE+igj0UUSwjyKCfBQR5FBEoI9C/Lw5HQRUYYQbAFVWZKivJLmCTXV/u2qF+Kh2sK9qh/iqVrCPap37WTMo7wgMF9sC1ke4AVBlTeh1re6OukqhfnbVCvaRjzfBBQDhBkAV5vDy1A1Xh7q7DACVDFfCAQAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAASyHcAAAAS3F7uJk+fbrq1asnHx8ftWvXThs3biy2b3Z2tp599lk1bNhQPj4+atmypVauXFmB1QIAgMrOreFm8eLFiouL08SJE7V582a1bNlSMTExOn78eJH9x48fr9mzZ+v111/Xzz//rIceekh33XWXtmzZUsGVAwCAysqt4WbKlCkaMmSIBg8erGuvvVazZs2Sn5+f5s6dW2T///znP3riiSfUo0cPNWjQQMOGDVOPHj30yiuvVHDlAACgsnJbuMnKytKmTZsUHR39ezEeHoqOjtaGDRuKXCYzM1M+Pj4F2nx9fbVu3bpit5OZmamUlJQCLwAAYF1uCzcnT55Ubm6uIiIiCrRHREQoMTGxyGViYmI0ZcoU7dmzR06nU6tXr9bSpUt17NixYrcTHx+v4OBg1ysyMrJM9wMAAFQubr+guCSmTZumxo0bq1mzZrLb7Ro5cqQGDx4sD4/id2PcuHFKTk52vQ4fPlyBFQMAgIrmtnATFhYmT09PJSUlFWhPSkpSzZo1i1ymRo0a+vDDD5WamqqDBw9q586dCggIUIMGDYrdjsPhUFBQUIEXAACwLreFG7vdrqioKCUkJLjanE6nEhIS1L59+wsu6+Pjozp16ignJ0fvv/++7rzzzvIuFwAAVBFe7tx4XFycYmNj1aZNG7Vt21ZTp05VamqqBg8eLEkaOHCg6tSpo/j4eEnSd999pyNHjqhVq1Y6cuSInn76aTmdTo0ZM8aduwEAACoRt4abPn366MSJE5owYYISExPVqlUrrVy50nWR8aFDhwpcT5ORkaHx48dr//79CggIUI8ePfSf//xHISEhbtoDAABQ2diMMcbdRVSklJQUBQcHKzk5metvAAAogc2HTunPM9br6mp++mpM5wrddkk+v6vU3VIAAAAXQ7gBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACWQrgBAACW4lWahXJzczV//nwlJCTo+PHjcjqdBeZ/8cUXZVIcAABASZUq3IwaNUrz589Xz549dd1118lms5V1XQAAAKVSqnCzaNEivfvuu+rRo0dZ1wMAAHBZSnXNjd1uV6NGjcq6FgAAgMtWqnDz6KOPatq0aTLGlHU9AAAAl6VUp6XWrVunNWvW6NNPP1Xz5s3l7e1dYP7SpUvLpDgAAICSKlW4CQkJ0V133VXWtQAAAFy2UoWbefPmlXUdAAAAZaJU4SbfiRMntGvXLklS06ZNVaNGjTIpCgAAoLRKdUFxamqq/va3v6lWrVq65ZZbdMstt6h27dq6//77lZaWVtY1AgAAXLJShZu4uDh9+eWX+vjjj3X69GmdPn1aH330kb788ks9+uijZV0jAADAJSvVaan3339fS5Ys0a233upq69Gjh3x9fXXPPfdo5syZZVUfAABAiZTqyE1aWpoiIiIKtYeHh3NaCgAAuFWpwk379u01ceJEZWRkuNrS09P1zDPPqH379iVa1/Tp01WvXj35+PioXbt22rhx4wX7T506VU2bNpWvr68iIyM1evToAnUAAIArW6lOS02bNk0xMTG66qqr1LJlS0nStm3b5OPjo1WrVl3yehYvXqy4uDjNmjVL7dq109SpUxUTE6Ndu3YpPDy8UP+3335bY8eO1dy5c3XTTTdp9+7dGjRokGw2m6ZMmVKaXQEAABZTqnBz3XXXac+ePVq4cKF27twpSerbt6/69+8vX1/fS17PlClTNGTIEA0ePFiSNGvWLC1fvlxz587V2LFjC/Vfv369OnTooH79+kmS6tWrp759++q7774rzW4AAAALKvVzbvz8/DRkyJBSbzgrK0ubNm3SuHHjXG0eHh6Kjo7Whg0bilzmpptu0v/93/9p48aNatu2rfbv368VK1ZowIABxW4nMzNTmZmZrumUlJRS1wwAACq/Sw43y5YtU/fu3eXt7a1ly5ZdsO+f/vSni67v5MmTys3NLXRhckREhOto0B/169dPJ0+e1M033yxjjHJycvTQQw/piSeeKHY78fHxeuaZZy5aDwAAsIZLDje9e/dWYmKiwsPD1bt372L72Ww25ebmlkVthaxdu1aTJk3SjBkz1K5dO+3du1ejRo3Sc889p6eeeqrIZcaNG6e4uDjXdEpKiiIjI8ulPgAA4H6XHG6cTmeR70srLCxMnp6eSkpKKtCelJSkmjVrFrnMU089pQEDBuiBBx6QJLVo0UKpqal68MEH9eSTT8rDo/DNXw6HQw6H47LrBQAAVUOpbgUvyunTp0vU3263KyoqSgkJCa42p9OphISEYm8nT0tLKxRgPD09JUnGmJIVDAAALKlU4ebFF1/U4sWLXdN//etfVa1aNdWpU0fbtm275PXExcXprbfe0oIFC7Rjxw4NGzZMqamprrunBg4cWOCC4169emnmzJlatGiRDhw4oNWrV+upp55Sr169XCEHAABc2Up1t9SsWbO0cOFCSdLq1av1+eefa+XKlXr33Xf1+OOP67PPPruk9fTp00cnTpzQhAkTlJiYqFatWmnlypWui4wPHTpU4EjN+PHjZbPZNH78eB05ckQ1atRQr1699Pzzz5dmNwAAgAXZTCnO5/j6+mr37t2KjIzUqFGjlJGRodmzZ2v37t1q166dTp06VR61lomUlBQFBwcrOTlZQUFB7i4HAIAqY/OhU/rzjPW6upqfvhrTuUK3XZLP71KdlgoNDdXhw4clSStXrlR0dLSkvOteyutOKQAAgEtRqtNSf/7zn9WvXz81btxYv/76q7p37y5J2rJlixo1alSmBQIAAJREqcLNq6++qnr16unw4cN66aWXFBAQIEk6duyYhg8fXqYFAgAAlESpwo23t7cee+yxQu2jR4++7IIAAAAuh9u+fgEAAKA8VKmvXwAAALgYt339AgAAQHkos69fAAAAqAxKFW4efvhhvfbaa4Xa33jjDT3yyCOXWxMAAECplSrcvP/+++rQoUOh9ptuuklLliy57KIAAABKq1Th5tdff1VwcHCh9qCgIJ08efKyiwIAACitUoWbRo0aaeXKlYXaP/30UzVo0OCyiwIAACitUj3ELy4uTiNHjtSJEyfUpUsXSVJCQoJeeeUVTZ06tSzrAwAAKJFShZu//e1vyszM1PPPP6/nnntOklSvXj3NnDlTAwcOLNMCAQAASqJU4UaShg0bpmHDhunEiRPy9fV1fb8UAACAO5X6OTc5OTn6/PPPtXTpUhljJElHjx7V2bNny6w4AABQtRxP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AHBR/DesCPzvFPgdvw8Aqhr+1QIAAJZCuAEAAJZCuIFlJSQk6JprruGW/gtYuXKlWrVqVeDZUQBQ1RFuLGLQoEGy2Wyy2Wyy2+1q1KiRnn32WeXk5EiS1q5d65pvs9lUo0YN9ejRQz/++ONF122M0Ztvvql27dopICBAISEhatOmjaZOnVqpb5kfM2aMxo8fX+CJ1pKUnp6uatWqKSwsrMD3juWrV6+ea5z8/f11ww036L333ivXWg8dOqSePXvKz89P4eHhevzxx11/dsXZvHmzunbtqpCQEFWvXl0PPvigzp49W6DP999/r9tuu00hISEKDQ1VTEyMtm3b5prfrVs3eXt7a+HCheWyXwDgDoQbC+nWrZuOHTumPXv26NFHH9XTTz+tl19+uUCfXbt26dixY1q1apUyMzPVs2fPYr+6It+AAQP0yCOP6M4779SaNWu0detWPfXUU/roo4/02Weflbrei233cqxbt0779u3T3XffXWje+++/r+bNm6tZs2b68MMPi1z+2Wef1bFjx7RlyxbdeOON6tOnj9avX18utebm5rr+HNavX68FCxZo/vz5mjBhQrHLHD16VNHR0WrUqJG+++47rVy5Utu3b9egQYNcfc6ePatu3brp6quv1nfffad169YpMDBQMTExys7OdvUbNGiQXnvttXLZNwBwC3OFSU5ONpJMcnJyoXnp6enm559/Nunp6a42p9NpUjOz3fJyOp2XvF+xsbHmzjvvLNDWtWtX8//+3/8zxhizZs0aI8mcOnXKNX/ZsmVGktm2bVux6128eLGRZD788MNC85xOpzl9+rQxxphOnTqZUaNGFZh/5513mtjYWNd03bp1zbPPPmsGDBhgAgMDTWxsrGnfvr0ZM2ZMgeWOHz9uvLy8zJdffmmMMSYjI8M8+uijpnbt2sbPz8+0bdvWrFmz5oLjMWLECPOXv/ylyHm33nqrmTVrlpk5c6bp2rVrofl169Y1r776qms6Ozvb+Pn5mbFjx15wm6W1YsUK4+HhYRITE11tM2fONEFBQSYzM7PIZWbPnm3Cw8NNbm6uq+2///2vkWT27NljjDHm+++/N5LMoUOHiu1jjDEHDx40kszevXuL3FZRvxcAUJRVPx0zdf/xiblr+royX/eFPr//iOfcXER6dq6unbDKLdv++dkY+dlL/0fk6+urX3/9tch5ycnJWrRokSRd8MmzCxcuVNOmTXXnnXcWmmez2RQcHFyimiZPnqwJEyZo4sSJkvKu+XjppZf0wgsvuB6YuHjxYtWuXVsdO3aUJI0cOVI///yzFi1apNq1a+uDDz5Qt27d9OOPP6px48ZFbufrr79Wv379CrXv27dPGzZs0NKlS2WM0ejRo3Xw4EHVrVu32Jq9vLzk7e19wSNNAQEBF9zv++67r9hvr9+wYYNatGjhejK3JMXExGjYsGHavn27WrduXWiZzMxM2e32Ardp+/r6Sso7atWoUSM1bdpU1atX15w5c/TEE08oNzdXc+bM0TXXXKN69eq5lrv66qsVERGhr7/+Wg0bNrzgfgBAVUC4sSBjjBISErRq1Sr9/e9/LzDvqquukiSlpqZKkv70pz+pWbNmxa5rz549atq0aZnV1qVLFz366KOu6XvuuUePPPKI1q1b5wozb7/9tvr27SubzaZDhw5p3rx5OnTokGrXri1Jeuyxx7Ry5UrNmzdPkyZNKnI7Bw8edPU/39y5c9W9e3eFhoZKygsR8+bN09NPP13kerKysvTKK68oOTlZXbp0KXa/tm7desH9vtDTNBMTEwsEG0mu6cTExCKX6dKli+Li4vTyyy9r1KhRSk1N1dixYyVJx44dkyQFBgZq7dq16t27t5577jlJUuPGjbVq1Sp5eRX81a9du7YOHjx4wX0AgKqCcHMRvt6e+vnZGLdtuyQ++eQTBQQEKDs7W06nU/369Sv0of3111/Lz89P3377rSZNmlTs0YR8poy/naNNmzYFpmvUqKHbb79dCxcuVMeOHXXgwAFt2LBBs2fPliT9+OOPys3NVZMmTQosl5mZqerVqxe7nfT09EJP083NzdWCBQs0bdo0V9t9992nxx57TBMmTChwFOQf//iHxo8fr4yMDAUEBOiFF15Qz549i91eo0aNLr7zZah58+ZasGCB4uLiNG7cOHl6eurhhx9WRESEaz/S09N1//33q0OHDnrnnXeUm5uryZMnq2fPnvr+++9dR3qkvKM+lfnicAAoCcLNRdhstss6NVSROnfurJkzZ8put6t27dqF/ncuSfXr11dISIiaNm2q48ePq0+fPvrqq6+KXWeTJk20c+fOi27bw8OjUBA6/6LVfP7+/oXa+vfvr4cfflivv/663n77bbVo0UItWrSQlHdRrKenpzZt2lTorqcLnQoKCwvTqVOnCrStWrVKR44cUZ8+fQq05+bmKiEhQV27dnW1Pf744xo0aJACAgIUERFx0e8Yu5zTUjVr1tTGjRsLtCUlJbnmFadfv37q16+fkpKS5O/vL5vNpilTpqhBgwaS8o6A/fLLL9qwYYMr8Lz99tsKDQ3VRx99pHvvvde1rt9++001atS44D4AQFVRNT61cUn8/f1LdARhxIgRio+P1wcffKC77rqryD79+vXTvffeq48++qjQdTfGGNcXmdWoUcN1OkTKCww//fSTOnfufNE67rzzTj344INauXKl3n77bQ0cONA1r3Xr1srNzdXx48ddp60uRevWrfXzzz8XaJszZ47uvfdePfnkkwXan3/+ec2ZM6dAuAkLCyvRWF7Oaan27dvr+eef1/HjxxUeHi5JWr16tYKCgnTttddedNv5p7Dmzp0rHx8f136kpaXJw8OjQDDLnz7/uTYZGRnat29fkdf2AEBVxK3gVzA/Pz8NGTJEEydOLPb00z333KM+ffqob9++mjRpkn744QcdPHhQn3zyiaKjo7VmzRpJedeALF++XMuXL9fOnTs1bNgwnT59+pLq8Pf3V+/evfXUU09px44d6tu3r2tekyZN1L9/fw0cOFBLly7VgQMHtHHjRsXHx2v58uXFrjMmJkbr1q1zTZ84cUIff/yxYmNjdd111xV4DRw4UB9++KF+++23S6q3KI0aNbrgKz+0FOX222/XtddeqwEDBmjbtm1atWqVxo8frxEjRsjhcEiSNm7cqGbNmunIkSOu5d544w1t3rxZu3fv1vTp0zVy5EjFx8crJCREktS1a1edOnVKI0aM0I4dO7R9+3YNHjxYXl5eBULnt99+K4fDofbt25d6/wFAkjxsNjm8POTt6eZ4Ueb3alVyJb0VvKoo6lbw8xV1K7gxxhw6dMh4eXmZxYsXF7tsbm6umTlzprnxxhuNn5+fCQoKMlFRUWbatGkmLS3NGGNMVlaWGTZsmKlWrZoJDw838fHxRd4Kfv4t1udbsWKFkWRuueWWQvOysrLMhAkTTL169Yy3t7epVauWueuuu8x///vfYmv+9ddfjY+Pj9m5c6cxxpjJkyebkJAQk5WVVahvZmamCQkJMdOmTbtoneXll19+Md27dze+vr4mLCzMPProoyY7O9s1P//P78CBA662AQMGmGrVqhm73W6uv/56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\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"LHS4AEYvnBX8"},"source":["# Visualization and Evaluation"]},{"cell_type":"markdown","metadata":{"id":"qc4wHlDgnGXE"},"source":["## Plotting Training Metrics"]},{"cell_type":"code","execution_count":23,"metadata":{"id":"zWcwvoS9nJu-","colab":{"base_uri":"https://localhost:8080/","height":727},"executionInfo":{"status":"ok","timestamp":1737311608562,"user_tz":360,"elapsed":1077,"user":{"displayName":"Jacob Scioscia","userId":"17945075236526288526"}},"outputId":"4eea0c1d-ae9d-410d-d599-851d964f4d81"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1800x400 with 3 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# Function to calculate the percentage of completion for each epoch in each fold\n","def calc_percent_completion(histories):\n","    max_epoch_length = max(len(history.history['accuracy']) for history in histories)\n","    percent_completion_list = np.linspace(0, 100, max_epoch_length)\n","    return percent_completion_list\n","\n","# Calculate percent completion for plotting\n","percent_completion = calc_percent_completion(histories)\n","\n","# Function to interpolate histories to the same length\n","def interpolate_histories(histories, percent_completion):\n","    interpolated_histories = []\n","    for history in histories:\n","        interpolated_history = {}\n","        for metric in history.history:\n","            x_old = np.linspace(0, 100, len(history.history[metric]))\n","            y_old = history.history[metric]\n","            y_new = np.interp(percent_completion, x_old, y_old)\n","            interpolated_history[metric] = y_new\n","        interpolated_histories.append(interpolated_history)\n","    return interpolated_histories\n","\n","# Interpolate all histories to the same length\n","interpolated_histories = interpolate_histories(histories, percent_completion)\n","\n","# Now, calculate the average and standard deviation across all folds for each metric\n","avg_metrics = {}\n","std_metrics = {}\n","for metric in interpolated_histories[0]:\n","    metric_values = [history[metric] for history in interpolated_histories]\n","    avg_metrics[metric] = np.mean(metric_values, axis=0)\n","    std_metrics[metric] = np.std(metric_values, axis=0)\n","\n","# Function to plot metrics with standard deviation\n","def plot_metrics_with_std(metric_name, ylabel, subplot_index, fig, num_subplots=(1, 2), color='blue', val_color='red'):\n","    ax = fig.add_subplot(num_subplots[0], num_subplots[1], subplot_index)\n","    ax.plot(percent_completion, avg_metrics[metric_name], color=color, label=f'Training {ylabel}')\n","    ax.fill_between(percent_completion, avg_metrics[metric_name] - std_metrics[metric_name], avg_metrics[metric_name] + std_metrics[metric_name], color=color, alpha=0.3)\n","    val_metric_name = 'val_' + metric_name\n","    ax.plot(percent_completion, avg_metrics[val_metric_name], color=val_color, label=f'Validation {ylabel}')\n","    ax.fill_between(percent_completion, avg_metrics[val_metric_name] - std_metrics[val_metric_name], avg_metrics[val_metric_name] + std_metrics[val_metric_name], color=val_color, alpha=0.3)\n","    ax.set_title(f'Training and Validation {ylabel}')\n","    ax.legend()\n","    ax.set_xlabel('Percent Completion')\n","    ax.set_ylabel(ylabel)\n","\n","# Plotting accuracy and loss\n","fig = plt.figure(figsize=(12, 4))\n","plot_metrics_with_std('accuracy', 'Accuracy', 1, fig)\n","plot_metrics_with_std('loss', 'Loss', 2, fig)\n","plt.tight_layout()\n","plt.show()\n","\n","# Plotting precision, recall, and F1-score\n","fig = plt.figure(figsize=(18, 4))\n","plot_metrics_with_std('precision', 'Precision', 1, fig, num_subplots=(1, 3))\n","plot_metrics_with_std('recall', 'Recall', 2, fig, num_subplots=(1, 3))\n","plot_metrics_with_std('f1_score', 'F1-Score', 3, fig, num_subplots=(1, 3))\n","plt.tight_layout()\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"umI0OA3RnMIj"},"source":["## Generating Grad-CAM Heatmaps"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"l7bVjdAvnPwO"},"outputs":[],"source":["# Functions for generating Grad-CAM heatmaps\n","def make_gradcam_heatmap(img_array, model, last_conv_layer_name, pred_index=None):\n","    # Create a model that maps the input image to the activations of the last conv layer and predictions\n","    grad_model = tf.keras.models.Model(\n","        [model.inputs], [model.get_layer(last_conv_layer_name).output, model.output]\n","    )\n","\n","    # Compute the gradient of the top predicted class for our input image\n","    with tf.GradientTape() as tape:\n","        last_conv_layer_output, preds = grad_model(np.expand_dims(img_array, axis=0))\n","        if pred_index is None:\n","            pred_index = tf.argmax(preds[0])\n","        class_channel = preds[:, pred_index]\n","\n","    # Gradient of the output neuron (top predicted) with regard to the output feature map of the last conv layer\n","    grads = tape.gradient(class_channel, last_conv_layer_output)\n","\n","    # Vector where each entry is the mean intensity of the gradient over a specific feature map channel\n","    pooled_grads = tf.reduce_mean(grads, axis=(0, 1, 2))\n","\n","    # Multiply each channel in the feature map array by \"how important this channel is\" with regard to the top predicted class\n","    last_conv_layer_output = last_conv_layer_output[0]\n","    heatmap = last_conv_layer_output @ pooled_grads[..., tf.newaxis]\n","    heatmap = tf.squeeze(heatmap)\n","\n","    # Normalize the heatmap between 0 & 1\n","    heatmap = tf.maximum(heatmap, 0) / (tf.math.reduce_max(heatmap) + K.epsilon())\n","    return heatmap.numpy()\n","\n","def display_gradcam(img_path, heatmap, alpha=0.4, save_path=None):\n","    # Load the original image\n","    img = keras_image.load_img(img_path)\n","    img = keras_image.img_to_array(img)\n","\n","    # Resize the heatmap to match the size of the original image\n","    heatmap = cv2.resize(heatmap, (img.shape[1], img.shape[0]))\n","\n","    # Convert heatmap to RGB\n","    heatmap = np.uint8(255 * heatmap)\n","    heatmap = cm.jet(heatmap)[:, :, :3] * 255  # Convert to RGB values in 0-255 range\n","\n","    # Superimpose the heatmap on original image\n","    superimposed_img = heatmap * alpha + img\n","    superimposed_img = keras_image.array_to_img(superimposed_img)\n","\n","    # Save the superimposed image if a save path is provided\n","    if save_path:\n","        superimposed_img.save(save_path)\n","        print(f\"Image saved to {save_path}\")\n","\n","    return superimposed_img\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"1tIVo55VAFk4"},"outputs":[],"source":["# Generating Grad-CAM for a test image\n","# Update test_img_path to the path of the image you want to analyze\n","test_img_path = os.path.join(cwd, 'Images', 'Stratified_split', 'combined', 'Nonop', 'Copy of Screenshot 2023-10-15 at 4.01.10 PM.jpg')  # Update this path\n","\n","# Preprocess the image\n","test_img_array = preprocess_image(test_img_path)\n","\n","# Get model predictions\n","preds = model.predict(np.expand_dims(test_img_array, axis=0))\n","\n","# Get the predicted class index\n","pred_index = np.argmax(preds[0])\n","\n","# Find the last convolutional layer name\n","for layer in reversed(model.layers):\n","    if isinstance(layer, Conv2D):\n","        last_conv_layer_name = layer.name\n","        print(f\"Last convolutional layer name: {last_conv_layer_name}\")\n","        break\n","\n","# Generate heatmap with Grad-CAM\n","heatmap = make_gradcam_heatmap(test_img_array, model, last_conv_layer_name, pred_index=pred_index)\n","\n","# Display and save heatmap\n","superimposed_img = display_gradcam(test_img_path, heatmap, save_path=os.path.join(cwd, 'Images', 'Stratified_split', 'heatmap_overlay_densenet.jpg'))"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["hPwasGLG1_1-","qc4wHlDgnGXE","umI0OA3RnMIj"],"gpuType":"T4","provenance":[],"machine_shape":"hm","toc_visible":true,"authorship_tag":"ABX9TyPyPqZpWoZ1YxupMhoaY7XP"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}